======================================================================
Annex C: Keywords
======================================================================

.. admonition:: 読者ノート

   現在ノート修正中。

* UML キーワードは UML 表記法の組み込み部分である予約語であり、普通は UML 図表要
  素に付属したテキストの註釈としてか、 UML 図式内のテキスト行の部分として現れ
  る。
* UML において、キーワードは三個の異なる目的に用いられる。

  #. 特定の UML 概念（メタクラス）を、同じ一般の図表の形式を共有する他のものと見
     分けるため。
  #. 特定の種類の UML 概念間の関係（メタ関連）を、同じ一般の図表の形式を共有する
     他の関係と見分けるため。
  #. UML 概念に付属した修飾子の値（メタ属性値）を指定するため。

* キーワードは ``«keyword»`` のように常に二重山括弧引用符で括られるが、これは
  キーワードが用いられているときに、より読みやすく見分けるための視覚上の手がかり
  としての機能を果たす。

  * 二重山括弧引用符は特別な種類の引用符であり、不等号が重複したものと間違えたり
    置き換えたりするべきではないが、利用可能な文字セットが二重山括弧引用符を含ん
    でいない状況においては除く。

* キーワードを特定することに加えて、二重山括弧引用符をステレオタイプの用例を見分
  けるのにも用いてよい。すなわち、

  * 二重山括弧引用符の間に現れる言葉のすべてが必ずしもキーワードではないし、
  * 二重山括弧引用符の間に現れる言葉は必ずしもステレオタイプを表さない。

* 複数のキーワードまたはステレオタイプまたはその両方の名前を同じモデル要素に適用
  するのであれば、ステレオタイプのそれぞれを分かれた二重山括弧引用符の対で括り、
  次から次に列記してよい。もしくはすべてを同じ二重山括弧引用符の対の間にカンマで
  区切って見せる。
* キーワードは文脈依存的で、同じキーワードが異なる文脈で異なる目的のために用いら
  れる例が少しある。

  * 例えばキーワード ``«create»`` は操作名の隣に現れてそれがコンストラクター操作
    であることを指示することが可能であり、二つの Classes 間の Usage 依存関係をラ
    ベルして、一方の Class が他方のオブジェクトを生成することを指示するのに用い
    ることも可能である。
  * これはキーワードをユーザー定義のステレオタイプに用いることが原理的には可能で
    あることを意味する。しかし、混乱を招きそうなのでそういう習慣は勧められない。

* Table C.1 Keywords

  * 標準 UML の一部として現在定義されているキーワードを Table C.1 に指定し、アル
    ファベット順に並べてある。
  * 列 Keywords はキーワードの正確な綴り方を与える。
  * 列 Metamodel Element はキーワードが描写するUML メタモデルの要素を指定する。
  * 列 Semantics はキーワードの意味の大意の記述を与える。より詳しい説明は対応す
    るメタクラスの記載の節 Notation で与えられている。
  * Notation Placement はキーワードが現れるところを指示する。ここでの規約を挙げ
    ておく。

    #. ``box`` header はキーワードが classifier 矩形の名前区画に現れることを意味
       する。
    #. ``dashed-line`` label はキーワードが何かの破線上のラベルとして用いられる
       ことを意味する。
    #. ``line`` label はキーワードが何かの線上のラベルとして用いられることを意味
       する。
    #. ``inline`` label はキーワードがテキスト行の部分として現れることを意味す
       る。
    #. ``swimlane`` header はキーワードが activity 図のレーンの見出しとして現れ
       ることを意味する。
    #. ``note`` label はキーワードが註釈記号で用いられることを意味する。
    #. ``top left`` corner はキーワードが記号の左上隅に現れることを意味する。
    #. ``after`` name はキーワードが関連要素の名前の後に現れることを意味する。

.. include:: /_include/uml-refs.txt
