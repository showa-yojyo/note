======================================================================
フォロー関連
======================================================================

本節では friends 系 REST API について記す。自分から他人に向かう関係の機能に
friends が名前に含まれる。インターフェイスは followers 系の対応する機能と一致し
ている。

.. contents::

GET friends/ids
======================================================================

自分がフォローしている全ユーザーの ID だけを得るための API が GET friends/ids
だ。 Twitter のユーザー ID はデータ型としては数値なのだが、 Python でテキスト加
工する都合上どこかで文字列に変換することになりそうだ。ありがたいことに、これは
API 側で気を利かせてくれる。

次に自分がフォローしているユーザーの ID を中途半端に CSV 出力する擬似コードを示
す。自分が誰もフォローしていない場合は、改行だけ出力されて終了する。

.. literalinclude:: /_sample/ptt/friends-ids.py
   :language: python3

要点を述べる。

* [1] :doc:`rest` で述べたカーソル処理パターンを適用する。
* [2] オプション ``stringify_ids=True`` を利用することで、取得データの ID の型を
  文字列として返すように Twitter に指示する。
* [3] ``response`` オブジェクトには ID のリストが含まれている。それを CSV 化して
  標準出力に出力する。このコードだと CSV が標準出力上で複数行に分裂してしまうの
  で注意。

GET friends/list
======================================================================

特定のユーザーがフォローしている全ユーザーの情報を得るのには GET friends/list を
利用できる。一度のリクエストでは返しきれないほどの多数のユーザーをフォローしてい
ることを想定してのカーソル処理となる。次に示すコード例のように、1 ページずつデー
タをリクエストすることになる。

.. literalinclude:: /_sample/ptt/friends-list.py
   :language: python3

* オプション ``count`` の最適値は普通はわからないので、例ではテキトーに書いた。

.. include:: /_include/python-refs-core.txt
.. include:: /_include/python-refs-twitter.txt
