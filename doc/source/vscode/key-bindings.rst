======================================================================
キーバインド
======================================================================

VS Code でもコマンドを実行するショートカットキーをユーザーが割り当てることが可能だ。
既定のキーバインドの確認方法、カブリの検出方法、カスタマイズ方法を習得したい。

.. attention::

   :doc:`./index` 冒頭の前提条件に留意すること。


.. contents:: ノート目次

.. キーバインド
..     Keyboard Shortcuts 画面
..     キーバインドの衝突を検知する
..     自分で変えたキーバインドを検知する
..     keybindings.json
..     特定のキーバインドを無効化する
..     初期状態のキーバインドを表示する

Keyboard Shortcuts Editor
======================================================================

:guilabel:`Keyboard Shortcuts` Editor は豊富で簡単なキーボードショートカットの編
集機能を提供する。キーバインドを持つコマンドも持たないコマンドも一覧表示され、利
用可能なコマンドを指定してキーバインドを容易に変更、削除、リセットすることができ
る。また、上部に検索欄があり、コマンドやキーバインドを見つける助けになる。この
UI は次のいずれかの方法で表示できる：

* コマンドパレットで :guilabel:`Preferences: Open Keyboard Shortcuts` を直接実行
  する
* メインメニューで :menuselection:`File --> Preferences --> Keyboard Shortcuts`
  を選択する
* Activity Bar 歯車アイコンで :menuselection:`Keyboard Shortcuts` を選択する
* ショートカットキー :kbd:`Ctrl` + :kbd:`K` :kbd:`Ctrl` + :kbd:`S` を押す

重要なのは、キーボードレイアウトに応じたキーバインドが表示されることだ。例えば
US キーボードレイアウトのキーバインドは、レイアウトがドイツ語に変更されると異な
るキーバインドが一般的には表示される。キーバインド入力ダイアログは、キーボードレ
イアウトに従ってキーバインドを割り当てる。

キーマップ拡張
======================================================================

メインメニューで :menuselection:`File --> Preferences --> Migrate Keyboard Shortcuts from...`
を選択すると、よその有力エディターで使われるキーマップ拡張機能
の一覧が表示される。これらの拡張機能は VS Code の、特に Editor 周りに関する
ショートカットを他のエディターのものと一致するように変更するものであり、キーボー
ドショートカットを新しく学ぶ必要はないとされる。また、Marketplace には拡張機能の
キーマップのカテゴリーがある。

.. admonition:: 利用者ノート

   実際には :guilabel:`EXTENSIONS: MARKETPLACE` ビューを表示させたら
   文字列 ``keymaps`` とエディターの名前を入力するのがいい。

ショートカットキー一覧表
======================================================================

メインメニューで :menuselection:`Help --> Keyboard Shortcut Reference` を選択す
ると、ショートカットキー一覧表を記した PDF ファイルが開く。ブラウザーで。

キーバインドの競合を検出する
======================================================================

多くの拡張機能をインストールしている場合や、キーボードショートカットをカスタマイ
ズしている場合、同じキーボードショートカットが複数のコマンドにバインドされている
ことがある。このようなキーバインド競合は混乱した動作を引き起こすことがある。

Keyboard Shortcuts Editor のコンテキストメニューにはコマンド
:menuselection:`Show Same Keybindings` があり、キーバインドが一致する項目に絞っ
て表示する。

多重定義されているキーバインド項目の :guilabel:`Source` や :guilabel:`When` を確
認して競合を解消するといい。

トラブルシューティング
======================================================================

キーバインドに関する問題のトラブルシューティングを行うにはコマンド
:guilabel:`Developer: Toggle Keyboard Shortcuts Troubleshooting` を実行する。
ショートカットキーのロギングが有効になると、対応するログファイルの
:guilabel:`OUTPUT` 出力パネルが現れる。対象のショートカットキーを押して、VS Code
がどのキーボードショートカットを検出し、どのコマンドが呼び出されるかを確認するこ
とができる。

.. admonition:: 利用者ノート

   実際にはショートカットキーが効かないとき使うとどうなるか試す。

変更したキーバインドを見る
======================================================================

Keyboard Shortcuts Editor 右上の詳細アイコンのメニューから
:menuselection:`Show User Keybindings` を選択すると、ユーザーが変更したキーバイ
ンドに絞って表示することができる。検索欄に ``@source:user`` と手動で入力してもい
い。

.. admonition:: 利用者ノート

   :guilabel:`Keybinding` が空欄の項目は、キーバインドが削除されていることを表す。

JSON を編集してカスタマイズする
======================================================================

ショートカットキーをカスタマイズするのは、設定ファイル :file:`keybindings.json`
を編集することでも可能だ。これを Editor で開くには、次の方法がある：

* Keyboard Shortcuts Editor の :menuselection:`Open Keyboard Shortcuts (JSON)`
  を選択する
* コマンドパレットから :guilabel:`Preferences: Open Keyboard Shortcuts (JSON)`
  を直接実行する

キーボード規則
======================================================================

規則は、次の要素からなる：

``key``
    押されたキー。
``command``
    実行するコマンドの識別子。
``when``
    コンテキストに応じて評価される真偽値を返す式。オプション。

Chord を記述することも可能。キーストロークを空白文字で分離して記述する。例：

.. code:: text

   Ctrl+K Ctrl+C

キーが押されると、

1. 規則が下から上に評価される。
2. ``key`` と ``when`` の双方が合致する最初の規則が受け入れられる。
3. それ以上の規則は処理されない。
4. 見つかった規則にコマンドが設定されているならば、それが実行される。

の場合、キーとタイミングの両方で一致する最初のルールが受け入れられます。

評価順が下から上である理由は、UI を使ってキーバインド規則を追加したときに
:file:`keybindings.json` の JSON オブジェクトの下部に新しい規則が入るからだ。
結果的に、新しい規則が古いものを上書きすることになる。

受理されるキー
======================================================================

要素 ``key`` は修飾キーとキー自身からなる。修飾キーは Windows の場合、次が使用可
能だ：

* ``Ctrl+``
* ``Shift+``
* ``Alt+``
* ``Win+``

キー自身としては次のものが使用可能だ：

.. code:: text

   [a-z]
   [0-9]
   f{,1}[1-9]
   [
   ]
   , - = [ ] \ ; ', , . /
   {left,up,right,down,pageup,pagedown,end,home}
   {tab,enter,escape,space,backspace,delete}
   {pausebreak,capslock,insert}
   numpad[0-9]
   numpad_{multiply,add,separator,subtract,decimal,divide}
