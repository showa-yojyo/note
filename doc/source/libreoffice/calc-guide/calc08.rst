======================================================================
Calc Guide Chapter 8 Using Formulas and Functions ノート
======================================================================

.. include:: ./calc-inc.txt

.. contents:: 章見出し
   :local:

Introduction
======================================================================

数式は数とテキストを評価するセルデータと考えられる。

関数とはセルに入る定義済みの計算のことだと考えられる。引数を入れるだけで自動的に
計算が行われる。関数を使って、求める結果を得るために必要な数式を作成する。

Setting up a spreadsheet
======================================================================

* 数式に定数を入力するのは避けろ。
* 何をするシートであるのかを記述する文書、メモ、コメントを含める。
* 数式が意図どおりに働くことを確認するために、エラーチェックを仕込む。

The trap of fixed values
----------------------------------------------------------------------

例えば一つのセルに為替レートと金額を乗じる数式を含めるとして、為替レートを生の数
値で表現するのではなく、乗算式が為替レート単品を含むセルを参照するように書くほう
が良い。

* 為替レートが変化した場合、計算式の編集が不要になる。
* 複雑な計算式を管理しやすい部分に分割することで、失敗を最小限に抑える。

Lack of documentation
----------------------------------------------------------------------

文書化がないと、当初の目的や方法論が不明確になり、解読が困難になりがちだ。そうな
ると最初からやり直す方が簡単で、以前の作業が無駄になる。セルにコメントを挿入し、
ラベルや見出しを使用すれば、スプレッドシートは後で簡単に修正でき、時間と労力を節
約できる。

Error-checking formulas
----------------------------------------------------------------------

スプレッドシートにチェックを設けると便利だ。

オプションダイアログ内 :menuselection:`LibreOffice Calc --> View` 内
:guilabel:`Formula indicator and hint` をオンにしろ。これにより、数式を含むセル
の左下に小三角形が描かれ、ツールチップには数式が示される。数式バー非表示派の利用
者の使い勝手が向上する。

Creating formulas
======================================================================

数式を入力する方法：

* セルに対して直接入力

  * 数式は記号 ``=`` で始める必要がある
  * 数式が前置単項演算子から始まる場合、等号記号は自動的に追加される
  * そうしないとテキスト扱いになる
* Function Wizard を利用

  * :menuselection:`&Insert --> &Function...` 実行
  * :kbd:`Ctrl` + :kbd:`F2` 押し
* Sidebar の Functions を利用 (:kbd:`Alt` + :kbd:`5`)

Operators in formulas
----------------------------------------------------------------------

* セルはデータ置場または計算場所として用いる。
* データ入力はセルに単に入力し、次のセルに移動すれば終わる。
* 数式ではセルを参照することが可能だ。

Operator types
----------------------------------------------------------------------

Calc では演算子は算術演算子、比較演算子、テキスト演算子、参照演算子に分類されて
いるようだ。

Arithmetic operators
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* 演算子 ``%`` は後置単項演算子として働く（意味は百分率）
* べき乗のための演算子はキャレット記号 ``^`` を用いる。古の Basic 由来？

Comparative operators
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* 比較演算の結果は ``TRUE`` または ``FALSE`` を返すと考えてよい
* 不等式は ``<>`` を用いる

Text operators
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* 二項演算子 ``&`` は文字列連結演算

テキストはスプレッドシート上のさまざまな場所にある断片を連結することができる。関
数``CONCATENATE`` を用いても連結可能だ。

Reference operators
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

セルの識別方法ついて述べられている：

   An individual cell is identified by the column identifier (letter) located
   along the top of the columns and a row identifier (number) found along the
   left-hand side of the spreadsheet. On spreadsheets read from left to right,
   the reference for the upper left cell is A1.

最も単純な形では参照はセル一つを参照するが、矩形や立方体の範囲を参照したり、参照
リストの中にある参照を参照することもできる。このような参照を作るには参照演算子を
用いる。

Reference range operator
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

コロンは左参照で参照されるセルと右参照で参照されるセルの両方を含む最小範囲への参
照を形成する。見慣れぬ範囲指定を Table 12 から引用しておく：

.. csv-table::
   :delim: |
   :header: Example, Description
   :widths: auto

   (A2:B4):C9 | セル A2 とセル C9 がそれぞれ左上と右下の矩形範囲
   Sheet1.A3:Sheet3.D4 | シート Sheet1, Sheet2, Sheet3 すべての A3:D4
   1:20 | 行 1 から 20 までのセルすべて

* 範囲 :samp:`{end}:{start}` と範囲 :samp:`{start}:{end}` は等しい。

Reference concatenation operator
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

セル union 演算子 ``~``, e.g. ``A1:C3~B2:D2``.

* この式の評価は参照リストという型の値だと考えられる。
* 関数によっては引数に参照リストを取り得る。
* 上に union と記したが、集合和の意味は薄い。

  * ``COUNT(A1:C3~B2:D2)`` は 10 セルで構成されるにも関わらず 12 を返す。
  * ``SUM(A1:C3~B2:D2)`` と ``SUM(A1:C3,B2:D2)`` は同じ値を返すが、処理が違う。

.. admonition:: 利用者ノート

   この演算子が活躍する場面が思い浮かばない。

Reference intersection operator
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

セル intersection 演算子 ``!``, e.g. ``A2:B4 ! B3:D6``

* 結果は左辺の参照と右辺の参照の両方に含まれるセルすべてを含む。
* 結果が単一範囲を指す場合、単一範囲への参照として評価される。
* オペランドが参照リストであってもかまわない。
* 一般には、評価が参照リストになるらしい。

設定ダイアログ :menuselection:`LibreOffice Calc --> Calculate` ページの
:guilabel:`&Automatically find column and row labels` をオンにしてあると、行や列
に名前を付けておいて :samp:`{row_name} ! {column_name}` のような式でクロス集計の
セルをわかりやすく参照することができる。

Relative and absolute references
----------------------------------------------------------------------

相対参照と絶対参照について、これらの概念を理解しろ。セルのコピーやリンクに欠かせ
ない。

Relative referencing
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

例えばセル B5 に B3 や B4 を含む式を入力する。これらのセル参照は実質的にはそれぞ
れ

* 「このセルより 2 行上のセル」
* 「このセルより 1 行上のセル」

を指している。これが相対参照の考え方だ。列側に対しても同様だ。

* 相対参照は現在のセルに対するオフセットの対と考えられる。
* 以前のスプレッドシートでは、オフセットペア表記方法を数式で使用可能だった。

.. admonition:: 利用者ノート

   オフセット方式のほうがコピー＆ペーストで参照を含む式を操作するときの動作を説
   明しやすいから良いと思う。

Absolute referencing
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

列文字や行数字の直前にドル記号を付したセル参照が絶対参照だ。

* 列または行の一方のみを絶対参照にすることも可能。E.g. $D1, D$1.
* 参照様式を切り替えるのには :kbd:`F4` キーを使いこなせ。

数式をコピー＆ペーストしたり、スプレッドシートをリンクしたりするのに、相対参照と
絶対参照の理解が必須だ。

Named ranges
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

セル自体を指すにはセルアドレスの他に名前を使える。セルや範囲に名前を付けること
で、数式の可読性と文書の保守性が向上する。名前を与える方法：

* :menuselection:`&Sheet --> &Named Ranges and Expressions --> &Define...` コマ
  ンドを実行する。ダイアログで対象セル・範囲と名前を指示する。
* または、シートからセル・範囲を選択し、数式バーの左にある名前ボックスで名前を入
  力する。

このような名前の管理は :kbd:`Ctrl` + :kbd:`F3` 押しで開くダイアログで行う。

数式に名前をつけることも可能だ：

#. :guilabel:`Degine Name` ダイアログボックスを開く
#. :guilabel:`&Name` 欄に名前を与える
#. :guilabel:`Range or formula &expression` 欄に数式を入力する
#. :guilabel:`&Add` を押す

.. admonition:: 利用者ノート

   名前付き数式を定義に間接参照セルを含ませる場合、定義時のセルアドレスが影響す
   る。

Order of calculation
----------------------------------------------------------------------

`Order of operations - Wikipedia <https://en.wikipedia.org/wiki/Order_of_operations>`__
に準拠する。

Calculations linking sheets
----------------------------------------------------------------------

* 複数のシートでデータをリンク可能。
* シートの名前は特定のデータがどこにあるかを識別するのに役立つ。意味のある名前を
  付けておけ。
* 関数 ``SHEET`` はシート集における番号（位置）を返す。番号は 1 から始まる。

次のコマンドを覚えておけ：

* :menuselection:`&Sheet --> Rename S&heet...`
* :menuselection:`&Sheet --> &Move or Copy Sheet...`

Understanding functions
======================================================================

* 関数の引数には名前があったりなかったりする
* 他のセルから値を入力するには、そのセルの名前や範囲を入力するか、マウスでセルを
  選択する。
* セルの値が変更されると、関数呼び出しの出力は自動更新する。

.. seealso::

   `Documentation/Calc Functions - The Document Foundation Wiki
   <https://wiki.documentfoundation.org/Documentation/Calc_Functions>`__

Compatibility with other spreadsheet applications
----------------------------------------------------------------------

Calc が MS Excel のスプレッドシートを開くと、特定の関数で発生する非互換性を回避
する措置が自動的に働く。

関数は単体では存在できず、いつでも数式の部分である必要がある。

Understanding the structure of functions
----------------------------------------------------------------------

関数呼び出しは等号、関数名、引数リストから構成される。

Nested functions
----------------------------------------------------------------------

その引数型さえ合致すれば、関数呼び出しに対する実引数が関数呼び出しであってもよ
い。内側の呼び出しに対しては等号を付けない。

Using the Functions deck
----------------------------------------------------------------------

:guilabel:`Functions` デッキの使用は手入力とほぼ同じ速さで、使いたい数式を覚えて
おく必要がないという利点がある。エラーの可能性も低くなるはずだ。もう一つは、最後
に使用した数式を表示する機能だろう。

Using the Function Wizard
----------------------------------------------------------------------

関数入力は Sidebar よりも :guilabel:`Funcion Wizard` ダイアログボックスのほうが
使用頻度が高いらしい。

* ダイアログボックスを開くのは :kbd:`Ctrl` + :kbd:`F2` 押しが早くて良い。
* :guilabel:`&Function` 一覧が多いので、:guilabel:`&Category` を決めて短くしろ。
* :guilabel:`Structure` タブでは関数呼び出しの木構造が示される。

数式バーの UI を忘れるな。

値ではなく数式がセルに表示される場合はオプション設定の
:menuselection:`LibreOffice Calc --> View` の :guilabel:`Formulas` がオンになっ
ていやしないかを確認しろ。

Array formulas
----------------------------------------------------------------------

What is an array formula?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

配列数式を理解しろ。配列式は一般に複数の値を同時に扱う。複数の値を処理できるだけ
でなく、複数の値を返すこともある。結果も配列になる。

* 配列式は計算式を一度評価し、配列のサイズと同じ回数だけ計算を実行するため、各セ
  ルの計算式を解釈する時間を節約できる。計算式自体の記憶領域節約にもなる。
* 配列として認識させるには範囲参照を含む数式入力で :kbd:`Ctrl` + :kbd:`Shift` +
  :kbd:`Enter` 押しで確定する。

When do you use array formulas?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* 異なる値を使って計算を繰り返す必要がある場合は、配列式を使え。
* 配列式を追加するには、配列範囲全体を選択してから、配列式に必要な変更を加える。
* 配列二つを乗算する MMULT 関数など、配列のためのさまざまな数学関数がある。

Creating array formulas
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Function Wizard を使用して配列式を作成する場合は、結果が配列で返されるように
:guilabel:`&Array` を毎回オンにしろ。

結果配列セルは自動的に変更から保護される。例えば :kbd:`Del` キーを押しても表示さ
れている値が消えない。

Implicit intersection of array formulas
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

この節は要旨がよくわからない。

Strategies for creating formulas and functions
======================================================================

スプレッドシートを自分以外が使用する場合は特に、どこでどのような入力が必要である
かを容易に理解するように示せ。表計算シートの目的、入出力仕様は最初のシートに記載
することが多い。

論理式や条件付き書式を使用してエラーを捕捉するのは良い考えだ。

Place a unique formula in each cell
----------------------------------------------------------------------

使い捨てスプレッドシートであれば、適切なセルそれぞれに一意となる数式を配置しろ。

Break formulas into parts and combine the parts
----------------------------------------------------------------------

分割統治法に則れ。長い数式を小さな部分に分解し、それらを組み立てるように全体を構
成しろ。

Speeding up calculations
----------------------------------------------------------------------

よくある間違いは、セルごとに数式を挿入し、何千もの数式の解釈と計算を行うことだ。

Use array formulas on massive data
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

配列式は一つの式が大量データに適用される。大きなデータ集合の場合、計算量を大幅に
削減する。

Use consolidation functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

``SUM``, ``SUMIF``, ``SUMIFS``, ``SUMPRODUCT``, etc., コレクションに作用する関数
を優先的に使え。

Use macros to create functions
----------------------------------------------------------------------

独自の関数やマクロを作成するという戦略もある。末端利用者によるスプレッドシートの
使用を大幅に簡素化し、数式を単純に保つことでエラーを回避できる可能性が高い場合に
この方法論が採用される。また、修正や更新を一元管理することで、管理も容易になる。

マクロの使用については、Chapter 13 で説明する。

Multi-threading
----------------------------------------------------------------------

オプション設定 :menuselection:`LibreOffice Calc --> Calculate` ページの
:guilabel:`Enable multi-threaded calculation` をオンにしておけ。オフにするな。

Calc はスプレッドシートで並行作業が有効な箇所を自動的に特定し、それに応じて処理
を行う。一般的に、スレッドが使用されるのは、数式グループに使用され、列内の隣接す
るセルが同じ数式を使用するが、相対的セルアドレス割当のために結果が異なる場合だ。

最適化が列ベースであるため、行ベースのレイアウトでは効率が悪くなる可能性がある。

Finding and fixing errors
======================================================================

数式とその数式が参照しているセルを調べるため、エラーメッセージ、入力の色分け、検
出各機能が用意されている。

Error messages
----------------------------------------------------------------------

数式のエラーメッセージは、通常 501 から 540 までの数、あるいは ``#NAME?`` エラー
メッセージの場合はセルに表示され、エラーの簡単な説明がステータスバーの右側に示さ
れる。

Examples of common errors
----------------------------------------------------------------------

#DIV/0! division by zero
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

このエラーは、数値をゼロまたは空白のセルで割った結果生じる。この種の問題を避ける
簡単な方法がある：

ゼロまたは空白のセルが表示されている場合は、条件関数を使用する。例えば、関数
``IF`` を使用して ``=IF(C3>0, B3/C3, "No Report")`` のように処理する。

#VALUE! no result and #REF! incorrect references
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

エラー ``#VALUE!`` はセルに正しくない値の型が含まれている場合によく起こるエラー
だ。

エラー ``REF!`` は参照の欠落が原因だ。数式が削除されたシートを参照しているなどの
場合がある。

Color coding for input
----------------------------------------------------------------------

入力の色分けというのは、数式中のセル参照、範囲参照、関数呼び出しの各引数の文字列
色のことを指す。

Value highlighting
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

出力にも色分けがあり、字の並びとしては同一でも、型が異なる場合（例：数値とテキス
ト）を見分けるときに有用だ。

:menuselection:`&View --> View &Highlighting` (:kbd:`Ctrl` + :kbd:`F8`) をオンに
すると、中身の文字に異なる色を割り当てることで、テキストと数値のデータ型を区別す
る。テキストは黒文字、数値は青文字だ。Chapter 2 も参照。

The Detective
----------------------------------------------------------------------

長いか複雑なスプレッドシートでは、色分けがあまり役に立たなくなる。

セル参照の連鎖をたどるには :menuselection:`&Tools --> &Detective -->` 各種コマン
ドを実行する。これで矢印がシート内に描かれる。

* 対象セルにカーソルを置き :kbd:`Shift` + (:kbd:`F9` or :kbd:`F5`) を押すのが早
  い
* 矢印の向きが気に入らない
* 矢印を消去するには :menuselection:`&Tools --> &Detective --> Remove All
  Traces` コマンドを実行

:menuselection:`&Tools --> &Detective --> Trace &Error` の使い方を習得しろ。

Examples of functions
======================================================================

初心者は算術、統計に区分されている関数から学べ。

Basic arithmetic and statistics
----------------------------------------------------------------------

最も基本的な関数は、基本的な算術計算やセル範囲の数値を評価する数式を作る。

Basic arithmetic
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

算術演算子が用意されているのに、関数 ``SUM``, ``PRODUCT`` などを敢えて使う理由と
しては、オペランドがセル範囲にわたる場合などが考えられる。``=A1+A2+A3+A4+A5`` よ
りも ``=SUM(A1:A5)`` のほうが明らかに良い。

Simple statistics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* ``COUNT`` は指定されたセル範囲内の記載項目の総数を返す。
* ``MIN``, ``MAX`` はセル範囲か、個別の入力された一連のセルから最小または最大の
  記載項目を返す。

  * ``MINA``, ``MAXA`` は上記関数の変種であって、数値でない値をゼロとして扱う。
  * 他にも、名前が ``A`` で終わる関数は、値がテキストである場合にこのような措置
    を講じる。
* ``SMALL``, ``LARGE`` は n も与えて第 n 位の値を返す。
* ``AVERAGE`` は算術平均を返す。
* ``MEDIAN`` は中央値を返す。
* ``MODE`` は最頻値を返す。
* ``QUARTILE`` は入力配列から指定四分位数の項目を返す。最小値、最大値は 0, 4 を
  それぞれ指示する。
* ``RANK`` は値の配列における順位を返す。昇順にも降順にも列挙させることが可能。

Using these functions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

一般的には、関数はフィルターやソートよりも簡単に調整でき、柔軟だ。

Rounding off numbers
----------------------------------------------------------------------

``ROUND`` 関数は呼び出し有無の比較を検討すると安心だ。例えば、

* ``=ROUND((SUM(A1,A2))`` をセル A3 に、
* ``=ROUND(A3)`` をセル A4 に

置き、それぞれの関数をラベル付けするというやり方もある。

Volatile / non-volatile functions
======================================================================

   Functions that are *always* recalculated whenever a recalculation occurs are
   termed :dfn:`volatile` functions.

例えば乱数生成関数やタイムスタンプ関数は揮発性だ。

シートを明示的に再計算する方法は：

* :menuselection:`&Data --> Ca&lculate --> &Recalculate` コマンドを実行
* :kbd:`F9` を押す

Using wildcards and regular expressions in functions
======================================================================

関数には、その実引数に正規表現またはワイルドカードを使用可能であるものがある。具
体例：

* 名前が ``D`` から始まるデータベース関数
* 平均値、勘定関数、最大値、最小値、和を得る各関数
* 表探索関数
* 当然ながら検索・置換関数

MS Excel はこのような正規表現を扱っていない。Calc 文書を変換して提出するような状
況では使用を避けろ。

設定ダイアログ :menuselection:`LibreOffice Calc --> Calculate` ページに関連設定
項目がある：

* :guilabel:`Formula Wildcards` ではワイルドカードのみが有効になっている
* :guilabel:`General Calculate` 項目の一部が正規表現の関係する動作に影響する。

Advanced functions
======================================================================

Calc 文書はユーザー定義関数またはアドインによって機能拡張可能だ。

ユーザー定義関数は、マクロ (Chater 13) を使用するか、個別のアドインや拡張機能を
記述することで設定可能。マクロは Basic, BeanShell, JavaScript, Python のいずれか
で記述される。
