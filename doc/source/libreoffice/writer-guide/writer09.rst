======================================================================
Writer Guide Chapter 9, Working with Styles ノート
======================================================================

.. include:: ./abbrev.txt

.. contents:: 章見出し
   :depth: 3
   :local:

Introduction
======================================================================

この章では |StyleDlg| の諸々のタブで利用できる多くのオプションを使用した、スタイ
ルを作成または変更する方法について、より詳しく説明する。

|StyleDlg| は手動書式設定ダイアログボックスと同じタブを多く共有しているので、こ
の章は手動書式設定の適用にも役立つ。もっとも、スタイルを使用するならば手動書式設
定は必要でなくなる。

Creating custom (new) styles
======================================================================

LibreOffice が提供する定義済みのスタイルを使用するだけでなく、新しいカスタムスタ
イルを追加することもできる。|Chapter08| では、新規スタイルを作成する方法として次
の三つを見た：

* ドラッグアンドドロップ
* |StylesDeck| :menuselection:`&New Style from Selection`
* |StyleDlg|

最初の二つはスタイルを作成する前に視覚効果を確認できて便利だ。スタイル（および他
のスタイルとの関係）を完全に制御するには、この章で説明する |StyleDlg| を使用する
必要がある。

.. note::

   図表スタイルは別の方法で作成する。|Chapter13| を見ろ。

Style dialog
----------------------------------------------------------------------

Sidebar |StylesDeck| を開く。上部にある適切な図像をクリックして、作成したいスタ
イルの品目を選択する。

ウィンドウ内で右クリックし、コンテキストメニューから :menuselection:`&New...` を
選択する。表示されるダイアログボックスは選択したスタイルの種類によって異なる。

.. tip::

   スタイルの新規作成と既存スタイルの変更に使用されるダイアログボックスはほとん
   ど同じだが、例外がある。:ref:`writer09-anchorA` を参照しろ。

.. _writer09-anchorD:

Organizer tab
----------------------------------------------------------------------

|OrganizerTab| は、すべてのスタイル区分（図表スタイルを除く）に共通で、区分間の
違いはわずかしかない。したがって、このタブについてはここでの一度しか述べられな
い。

作成するスタイルに応じて、このタブには次のコントロールがある：

:guilabel:`&Name`
   すべての品目にある。作成するスタイルに名前を与える。
:guilabel:`&AutoUpdate`
   段落スタイルと枠スタイルにのみ適用される。オンである場合、そのスタイルで整形
   された段落や枠に手動で変更を加えると、Writer はそのスタイル自体に適用する。

   .. caution::

      文書内のスタイルを手動で上書きする習慣がある場合は :guilabel:`&AutoUpdate`
      が有効になっていないことを確認しろ。そうしないと、文書が予期せず再整形され
      ることになる。

:guilabel:`Ne&xt Style`
   段落スタイルとページスタイルでのみ使用可能。同じ型の次の要素に適用されるスタ
   イルを指定するために使用する。例えば、左ページスタイルの後には通常右ページス
   タイルが続き、最初のページスタイルの後には左ページスタイルが続き、見出しの後
   にはテキスト本文が続く、といった具合だ。
:guilabel:`&Inherit from`
   段落スタイル、文字スタイル、枠スタイルで使用可能で、継承階層におけるスタイル
   の位置を決定する。新しいスタイルのすべての開始特性は、ここで指定されたスタイ
   ルから継承される。
:guilabel:`&Category`
   全スタイルで使用可能。これを使用して、新しいスタイルを区分のどれかに関連付け
   る。定義済みスタイルの区分を変更することは不可能。この項目を設定しておくと
   |StylesDeck| の内容を絞り込むときに便利だ。
:guilabel:`Contains` 区画
   スタイルの特質の概要が示される。

Style inheritance
----------------------------------------------------------------------

段落スタイルまたは文字スタイルを新規作成する場合、既存スタイルを設定の出発点とし
て採用できる。この意味で、LibreOffice はスタイルと連動する。

スタイル設定が継承される場合、親スタイルの変更は、そこから継承される子スタイルす
べてに影響する。スタイル間の接続を確認するには、|StylesDeck| 下部のドロップダウ
ンリストから :guilabel:`Hierarchical` ビューに切り替える。たとえば、見出しスタイ
ルはすべて `Heading` というスタイルを継承している。

継承は、同時にプロパティを変更できるスタイルの一族を作成する方法だ。例えば、見出
しをすべて緑色にすると決めた場合、親スタイルのフォント色を変更するだけで望ましい
結果を得ることができる。

ただし、親スタイルの引数に加えた変更は、子スタイルの同じ引数に以前に加えた変更を
上書きしない。たとえば、`Heading 2` のフォント色を緑に変更した場合、`Heading` ス
タイル（親）のフォント色を赤に変更しても `Heading 2` のフォント色には影響しない。

どの性質がスタイルに固有であるかは、|OrganizerTab| の :guilabel:`Contains` 区画
を見れば簡単に確認できる。子スタイルの性質を親スタイルのものにリセットしたい場合
は、|ParagraphStyleDlg| および |CharacterStyleDlg| の下部にある :guilabel:`Reset
to &Parent` ボタンを押す。

Example: Changing a property of a parent style
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

`Heading 1` や `Heading 2` だけでなく、すべての見出しのフォントを変更したいとす
る：

#. |StylesDeck| を開く
#. |ParagraphStylesTab| をクリック
#. :guilabel:`Heading` を右クリック
#. :menuselection:`&Edit Style...` を選択
#. |FontTab| を選択
#. フォントを選択
#. |OK| を押す

これで `Heading 1` から `Heading 10` までのフォントが一度の操作で変更される。

Working with paragraph styles
======================================================================

これらすべてを設定する必要はない。ほとんどの場合、特にスタイルをリンクしたり、新
しいスタイルを類似のスタイルに基づかせたりする場合は、いくつかの属性のみを変更す
る必要がある。

Indents & Spacing tab
----------------------------------------------------------------------

|Indents&SpacingTab| では、段落の字下げ、行間、段落と上下の段落の空きを設定でき
る。

タブの :guilabel:`Indent` 区画を使用して、これらのパラメータを使用して字下げを設
定する：

:guilabel:`&Before text`
   ページの左余白と段落領域の左端との間の隙間を制御する。負の値を入力すると、テ
   キストは余白の左から始まる。これは、左余白がかなり広いが、見出しをページの中
   央に配置したい場合に便利だ。
:guilabel:`After &text`
   ページの右余白と段落領域の右端との間の隙間を制御する。負の値を入力すると、テ
   キストがページの右余白にはみ出る。
:guilabel:`&First line`
   段落領域に対する段落の最初の行のオフセット（正または負）を入力する。正の値を
   入力すると、最初の行の字下げが大きくなり、負の値を入力すると、最初の行の開始
   位置が段落領域の左側になる。
:guilabel:`&Automatic`
   オンにすると、最初の行の字下げは自動制御される。フォントサイズとその他に基づ
   いて Writer が計算する。

タブの :guilabel:`Spacing` 区画を使って、段落の上下の隙間を決める。見出しスタイ
ルでは、空段落を挿入しなくても前の節のテキスト本文と分離できるように上に隙間を入
れるのが通例だ。ある種の文書では段落間に隙間を入れるのもよくある。本書の本文スタ
イルは連続する段落の間に隙間を残すように設定されている。同じスタイルの段落間の隙
間を削除するオプションを選択できる。

.. note::

   |OptionsDlg| :menuselection:`LibreOffice Writer-->Compatibility` のオプション
   は上の隙間と下の隙間を一緒にするか（既定）、大きい方の隙間だけを適用するかを
   制御する。詳細は |Chapter20| を見ろ。

段落間の間隔は段落内の行間には影響しない。行間は :guilabel:`Line Spacing` 区画で
制御する。

:guilabel:`Single`
   既定設定。段落に単一行間を適用する。行間はフォントサイズに基づく自動計算。
:guilabel:`1.15 lines`
   行間を 1.15 行に設定する。縦方向の空間を使うことなくテキストの見栄えを良くす
   る。
:guilabel:`1.5 line`
   行間を 1.5 行に設定する。
:guilabel:`Double`
   行間を 2 行に設定する。
:guilabel:`Proportional`
   百分率を入力する。100% は一行間隔、200% は二行間隔といった具合だ。
:guilabel:`At least`
   行間に使用する最小値を（選択した単位で）入力する。
:guilabel:`Leading`
   連続する二行のテキストの基準線間の垂直空間の高さを制御するには、値を入力す
   る。それが単一行間隔値に加算される。
:guilabel:`Fixed`
   行間隔の正確な値を入力する。

.. tip::

   同じ段落で異なるフォントサイズを使用すると、行間が不揃いになることがある。行
   間を均等にするには、ドロップダウンリスト覧で :guilabel:`Fixed` または
   :guilabel:`At least` を選択し、使用する最大のフォントサイズを考慮した十分な行
   間を作成するのに十分な大きさの値を指定する。

.. _writer09-anchorE:

このタブの最後のオプションは :guilabel:`Activate page li&ne-spacing` だ。これは
:ref:`後述する <writer09-anchorB>` :guilabel:`Use page li&ne-spacing` オプション
と連動する。これらのオプションの使い方についてはヘルプおよび |Chapter06| を見ろ。

Alignment tab
----------------------------------------------------------------------

テキストの水平アライメントを変更するには |AlignmentTab| を用いる。

* :guilabel:`&Left`
* :guilabel:`Righ&t`
* :guilabel:`&Center`
* :guilabel:`&Justified`

の中から選択する。選択結果はタブの右側にあるプレビュー窓に表示される。

:guilabel:`Justified` を選択すると段落の最終行をどのように扱うかを設定できる。既
定では、Writer は最終行を左（開始）に揃えるが、中央揃いか両端揃いかを選択できる。
つまり、最終行の単語はその行を完全に占めるように間が空く。最終行を両端揃いにし、
:guilabel:`&Expand single word` を選択した場合、両端揃いの段落の最終行が単一単語
で構成されている場合、この単語は文字間に隙間を挿入して引き伸ばされ、行の全長を占
めるようになる。

|AlignmentTab| は :guilabel:`Text-to-text` 垂直整列を制御するためにも用いられ
る。同じ行に複数のフォントサイズがある場合に便利だ。行のフォントのうち、

* :guilabel:`Automatic`
* :guilabel:`Base line`
* :guilabel:`Top`
* :guilabel:`Middle`
* :guilabel:`Bottom`

の間で揃える要素を選択しろ。

Text flow options for paragraph styles
----------------------------------------------------------------------

|TextFlowTab| には次の三つの部分がある：

* :guilabel:`Hyphenation`
* :guilabel:`Breaks`
* :guilabel:`Options`

Hyphenation options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:guilabel:`Hyphenation` 区画で :guilabel:`A&utomatically` がオンである場合、次の
選択権が行使可能だ：

:guilabel:`Don't hyphenate words in &CAPS`
   すべて大文字で書かれた単語を分綴しない。
:guilabel:`Don't hyphenate the &last word`
   段落の最後の単語を分綴しない。
:guilabel:`C&haracters at line end`
   行末に残す最小文字数を指定する。
:guilabel:`Cha&racters at line begin`
   ハイフンに続く行頭の最小文字数を指定する。
:guilabel:`&Maximum consecutive hyphenated lines`
   分綴を許す連続した行の最大数。組版上の標準は 2 だ。
:guilabel:`&Minimum word length in characters`
   分綴を許す最小の単語長を文字数で指定。
:guilabel:`Hyphenation &zone`
   単語を分綴できない水平隙間の長さを指定。この値を指定すると、両端揃いテキスト
   では単語間の隙間が大きくなり、非両端揃いテキストでは段落余白からの距離が大き
   くなる。

Breaks options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:guilabel:`Breaks` 区画では、段落を新しいページまたは段から開始させ、改行位置、
新しいページのスタイル、ページ番号を指定することが可能だ。この選択肢の典型的な使
い方は、新しい章の最初のページを新しい（通常は右側の）ページから始めることだ。

新しいページを常に特定のスタイルで開始するには、次の設定を選択する：

* :guilabel:`Breaks` 区画で :guilabel:`&Insert` をオン
* :guilabel:`&Type` が :guilabel:`Page` に、:guilabel:`&Position` が
  :guilabel:`Before` に設定されていることを確認
* :guilabel:`With page st&yle` をオンにし、ドロップダウンリストからページスタイ
  ルを選択
* 前の章からページ番号を続けるには :guilabel:`Page &number` を選択しない。各章の
  ページ番号を 1 から再開するには、:guilabel:`Page &number` をオンにして、それを
  ``1`` に指定する。

.. note::

   新しい章の最初のページを常に右ページで開始したい場合は、|PageStyleDlg|
   |PageTab| :guilabel:`Layout` 設定欄でこの選択を行って、最初の章ページのページ
   スタイルが右ページにしか設定されていないことを確認しろ。

Other options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

|TextFlowTab| :guilabel:`Options` 区画には段落がページの底に収まらない場合にどう
するかを制御する設定が用意されている：

:guilabel:`&Do not split paragraph`
   段落が一ページの下に収まらない場合、段落全体が次のページの頂上に移動する。こ
   の場合、ページの底部に大きな空白が生じる可能性がある。
:guilabel:`&Keep with next paragraph`
   ページの最後の段落にならないように、見出しや一覧のリード文に使用する。
:guilabel:`&Orphan control` と :guilabel:`&Widow control`
   未亡人と孤児は組版用語だ。本文から引用すると：

      An :dfn:`orphan` is the first line of a paragraph alone at the bottom of a
      page or column. A :dfn:`widow` is the last line of a paragraph that
      appears alone at the top of the next page or column.

   これらの選択肢を使って、段落がページや列をまたいで分割できるようにするが、
   ページや段のいちばん下または上に少なくとも二行は一緒に残るようにする。何行を
   残すかを指定できる。

Font options for the paragraph style
----------------------------------------------------------------------

|ParagraphStyleDlg| にある次の三つのタブは書体の体裁を制御する設定専用だ：

* |FontTab|
* |FontEffectsTab|
* |PositionTab|

最初の二つのタブは簡単で、選択肢の多くは :ref:`writer09-anchorC` で述べられる文
字スタイルの作成時に使用するものと同じだ。段落スタイルを作成するときに使用できる
選択肢についてここで説明する。

.. tip::

   |FontTab| の右下には :guilabel:`Feat&ures...` ボタンがある。開いたダイアログ
   ボックスで設定可能な機能は選択したフォントによって異なる。ここでは説明しな
   い。

Specifying a relative font size
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

固定フォントサイズを指定可能だ。さらに、他のスタイル（リンクされたスタイル）に基
づいてスタイルを作成する場合は、他のスタイルとの相対的フォントサイズを百分率また
は符号付きポイント値 (-2 pt, +5 pt, etc.) で指定可能。相対フォントサイズは Web
ページでよく使われる。

例えば、`Heading 1` 段落スタイルは `Heading` スタイルに基づいている。`Heading 1`
のフォントサイズが 14 pt で、`Heading 1` スタイルのフォントサイズが 130% と指定
された場合、`Heading 1` スタイルで整形された段落のテキストのフォントサイズは
18.2 pt となる。

フォントサイズを百分率で指定するには：

#. |ParagraphStyleDlg| で |FontTab| を選択
#. :guilabel:`Si&ze` 欄で百分率を記号 % 付きで入力

同様に、プラス記号またはマイナス記号の後に、基本フォントサイズに加算または減算す
るポイント数を入力することも可能。

相対フォントサイズから絶対フォントサイズに戻すには、希望するフォントサイズをポイ
ント (pt) のような具体的な単位で入力しろ。

Selecting a language for a paragraph style
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

文書に選択されている言語 [#writer09footnoteA]_ によって、綴字、類語、分綴、小数
点および千単位区切り記号、既定の通貨形式に使用される辞書が定まる。辞書がインス
トールされている言語しか使用できない。

文書内では任意の段落スタイルに言語を個別に適用可能だ。この設定は文書全体の言語よ
りも優先される。

|ParagraphStyleDlg| |FontTab| では、辞書がインストールされている言語が
:guilabel:`&Language` 一覧に小さな図像で表示される。綴字検査の際、Writer はこの
スタイルの段落に対する正しい辞書を使用する。

複数の言語で文書を書く場合、リンクされたスタイルを使って、言語オプションしか異な
らない段落スタイルを二つ作成することが可能だ。その後、段落スタイルの他の特質のい
くつかを変更したい場合、親スタイルを変更することだけすればよい。

たまに異なる言語の単語を挿入して綴字検査で間違って拾われるのを避けるために、文字
スタイルを使用する方が便利だ。:ref:`writer09-anchorC` で議論する。

.. tip::

   :guilabel:`&Language` に :guilabel:`[None]` を選択するのが、URL やプログラミ
   ングコードなど、検査したくないテキストが段落に含まれている場合に便利だ。

Options for positioning text
----------------------------------------------------------------------

|ParagraphStyleDlg| |PositionTab| に画面や印刷ページのテキストの位置に影響するオ
プションがすべて集合している。

`Position` 区画を使用して、上付き文字と下付き文字、H:sub:`2`O や M:sup:`2` のよ
うに、通常の活字行の上または下にある文字、の体裁を制御する。通常、上付き文字や下
付き文字は段落全体にではなく、文字の群れに適用する。したがって、これらの引数は文
字スタイルを定義するときに限り変更し、段落スタイルについては既定設定のままにする
ことが強く勧められる。

|PositionTab| の第二区画は段落領域の回転を制御する。段落を回転させる一般的な用途
の一つは、狭い図表の列の上に見出しを合わせることだ。もう一つは、横長ページに縦長
のヘッダーとフッターを作成するだ。詳しくは |Chapter06| を見ろ。

:guilabel:`Scale &width` スピンボックスは回転したテキストを水平方向に圧縮または
伸張するフォント幅の百分率を制御する。

.. tip::

   回転させた図表の見出しは通常、垂直ではなく角度をつけた方が読みやすくなる。角
   度のついたテキストを作成するには、|DrawingToolbar| からテキストオブジェクトを
   作成し、任意の角度に回転させる必要がある。|Chapter11| 参照。

Example: Rotating the text in a paragraph style
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

既存図表に対して、図表の見出しを回転したものを適用する例：

#. 段落スタイルを `Table Heading` から新規作成する。名前を `Table Heading
   Rotated` などとする。
#. |ParagraphStyleDlg| |PositionTab| :guilabel:`Rotation / Scaling` で
   :guilabel:`90 &degrees` を選択
#. 図表の見出し行を選択し `Table Heading Rotated` を適用する。見出し行のセル内の
   テキストが回転する。
#. 見出しがセルの最上部揃いに配置されている場合、セルの最下部揃いに配置を変更す
   ることができる。これを行うには次のいずれかを行う：

   * |TableToolbar| :guilabel:`Align Bottom` 図像をクリック
   * メニューの :menuselection:`F&ormat-->Align Tex&t-->&Bottom` を選択

.. admonition:: 読者ノート

   本書の記述はやや怪しい。図版どおりにならない場合には左揃いや右揃いも試せ。

Spacing options
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

段落内の文字の間隔を個別に制御するには |PositionTab| の :guilabel:`Spacing` 区画
を使用する。ドロップダウンメニューで既定以外のオプションを選択した場合は、入力欄
を使用してテキストを拡大または縮小する値をポイント単位で入力する。

:guilabel:`Pair kerning` オプション（既定）は特定の文字対間の隙間を増減して、テ
キスト全体の見栄えを改善する。Kerning は、特定の文字の組み合わせに対して文字間隔
を自動的に調整する。Kerning は特定のフォントタイプでのみ利用でき、印刷文書では印
刷機がサポートしている場合に限り機能する。

.. admonition:: 読者ノート

   `Kerning - Wikipedia <https://en.wikipedia.org/wiki/Kerning>`__ を読んでおく
   といい。

Controlling tab stops
----------------------------------------------------------------------

無境界の図表はページ全体に素材を配置するためのより良い問題解決法と一般的には考え
られているが、タブで十分な状況もある。管理が容易で適用が早いという利点もある。

.. caution::

   タブを使用する必要があり、かつ文書を人に送信する場合は既定のタブストップを使
   用するな。受信者が既定のタブストップを定義しており、著者の使用しているそれと
   異なる場合、受信者の機械では段落の体裁が大きく異なる可能性がある。段落または
   段落スタイルでタブストップを明確に定義しろ。

段落スタイルでタブストップを定義するには :guilabel:`Tabs` ページを使用する。ここ
では、タブのタイプを選択できる：

* :guilabel:`&Left`
* :guilabel:`Righ&t`
* :guilabel:`C&enter`
* :guilabel:`Deci&mal`: 小数点として使用する文字

および :guilabel:`Fill Character` を選択できる。タブ前のテキストの終端とタブ後の
テキストの始端の間に表示される文字を指定する。

また、対応する欄に入力してカスタム充填文字を作成することもできる。その一般的な用
例としては次のようなことが挙げられる：

* 目次の見出しとページ番号の間に点々を追加する
* 記入用のフォームを作成する際にアンダースコアを追加する

新しいタブストップを作成するには、左余白からの相対位置、タブの型、充填文字を指定
し、:guilabel:`New` ボタンを押せ。タブストップの位置を変更するには、ページの右側
にあるボタンを使用して、所望の位置に新しいタブストップを作成し、古いタブストップ
を削除しろ。

ページ余白を超えるタブを定義することはできない。無境界図表を使用しろ。

Outline & List tab
----------------------------------------------------------------------

|Chapter08| で説明したように、|Outline&ListTab| を使用して任意の段落スタイルにア
ウトラインレベルを割り当てろ。この機能により、 :menuselection:`&Tools-->Heading
&Numbering...` に一覧されているスタイルを使用して、見出しとともにそれらの段落を
含む目次を作成することが可能だ。

このタブを使用すると段落スタイルを一覧スタイルに関連付けることもできる。詳細と例
については |Chapter12| を見ろ。

Setting up a drop cap
----------------------------------------------------------------------

Drop caps [#writer09footnoteB]_ は一般に最初の段落スタイルにしか適していない。
|ParagraphStyleDlg| の :guilabel:`Drop Caps` タブで性質を定義しておくことが可能
だ。

:guilabel:`Display drop caps` を選択すると、他の選択肢も有効になる：

* 占有行数
* 拡大する文字数（最初の単語全体が必要な場合は、対応する欄をオンにする）
* Drop caps とテキストの隙間

Drop caps は段落の他の部分と同じフォントと同じ特質を用いるが、特定の文字スタイル
を用いれば簡単に体裁を変更することができる。たとえば、drop caps の色を変えたり、
輪郭効果を適用したりすることができる。対応するドロップダウンメニューで用いたい文
字スタイルを選択する。

Background (area), highlighting, and transparency
----------------------------------------------------------------------

段落に背景色、グラデーション、パターン、ハッチング、画像を追加することは枠の代用
となる。|ParagraphStyleDlg| |AreaTab| で背景をカスタマイズできる。選択肢について
は |Chapter06| で記述している。

|AreaTab| を操作する際には、次の点を考慮するとよい：

* 定義済みの色の一覧に希望の色がない場合は、|Chapter20| で説明されているように、
  自分で色を定義することが可能
* 段落領域と段落内のテキストに異なる背景を選択可能（テキストには
  :guilabel:`Highlighting` タブを使用）
* 領域処理は段落領域にしか適用されない：字下げされた段落を定義した場合、段落と余
  白の間の隙間は段落の背景色を持たない

|TransparencyTab| では選択背景の透明度を選択可能だ。値の範囲は 0% から 100% だ。
値が大きいほど透明性がより高い。

Borders
----------------------------------------------------------------------

境界は、枠を用いずに段落をテキストから切り離したり、本書のようにヘッダーやフッ
ターの領域をメインテキスト領域から切り離したり、見出しスタイルによっては装飾的な
要素を設けるためによく使われる。次の点を考慮しろ：

* 境界と段落の間隔が字下げやタブに与える影響
* 複数の段落を囲むように境界線を引きたい場合は :guilabel:`&Merge with next
  paragraph` をオンにしておく
* 多くの場合、余白は同じ効果をもたらす

|BordersTab| については |Chapter04| も見ろ。

.. _writer09-anchorA:

Using conditional paragraph styles
----------------------------------------------------------------------

段落スタイルを条件付きにするということは、それが使われる場所によって書式が変わる
ということだ。例えば `MyTextBody` スタイルを既定では黒にし、背景が青の枠内では白
にすることができる。

条件付き書式の最も一般的な使い方は、おそら単一スタイルアウトラインだ。単一スタイ
ルのアウトラインは `Numbering List` スタイルで設計されたアウトライン番号付けの一
種だ。異なるアウトラインレベルに対して異なるスタイルを使用する代わりに、
:kbd:`Tab` を押して副見出しを作成するときに番号の書式を変更する。

単一スタイルのアウトラインの唯一の厄介な点は、階層がすべて同じように見えることだ。
そこで便利なのが条件付きの段落スタイルだ。

#. |Outline&ListTab| で段落スタイルをアウトラインスタイルに割り当て、
#. |ConditionTab| を開く。
#. そこでアウトラインスタイルのレベルを他の段落スタイルに割り当てることができ
   る。

そして、段落スタイルを使用中に :kbd:`Tab` を押すと、アウトラインの各階に異なる書
式が適用され、単一スタイルのアウトラインがそれ単品よりもさらに便利になる。

条件付きスタイルを作成するとは、「この条件ではスタイルを他のもののようにする」と
いうことだ。たとえば「フッターに入力するときは、このスタイルを `my_footer` 段落
スタイルのようにし、図表に入力するときは、このスタイルを `table_text` 段落スタイ
ルのようにする」のようなものだ。

さらに、スタイルの通常の（無条件）性質を設定するだけでなく、さまざまな状況で他の
スタイルをどのように見せるかを定義する必要がある。これを行うには |ConditionTab|
を使用する。

.. note::

   `Default`, `Heading 1`, `Heading 2` などの定義済みスタイルは、`Text body` を
   除いて、条件付きに設定すること不能。

.. caution::

   スタイルを新規作成して条件付きにする場合は |ParagraphStyleDlg| を初めて開いた
   状態で行う必要がある。ダイアログボックスが閉じた後、再びそれを開いても
   |ConditionTab| は表示されない。

条件付き段落スタイルを設定するには：

#. 段落スタイルを新規に定義する
#. スタイルの段落プロパティをすべて選択する（まだ |OK| を押さない）
#. |ConditionTab| をクリック
#. :guilabel:`Context` 一覧で最初の条件を選択し、右側の :guilabel:`Paragraph
   Styles` 一覧でこの条件に必要なスタイルを選択
#. :guilabel:`Apply` を押す
#. 別のスタイルにリンクさせたい各条件について 4. と 5. を繰り返す
#. |OK| を押す

スタイルが選択されるとテキストの書式がその :guilabel:`Context` に依存することが
わかる。

Working with character styles
======================================================================

文字スタイルは段落スタイルの書式を上書きする。段落全体ではなく、単語や句などの文
字の群れに適用される。他の部分に影響を与えずに、段落の一部の体裁や属性を変更した
い場合に主に使われる。文字スタイルによって得られる効果の例としては **太字** や
*斜体* の書体、色のついた単語などがある。

文字スタイルのその他の使い方については本書の他の箇所で説明している。これらの使い
方には、章番号、ページ番号、一覧番号を周囲のテキストよりも大きくしたり、ハイパー
リンクの書式を整形したりすることが含まれる。一部の単語（例えば、名前や異なる言語
の単語）を綴字誤りとして検出させたくない場合、文字スタイルの性質で適用する言語を
定義することが（その言語があれば）可能だ。

.. _writer09-anchorC:

Creating a new character style
----------------------------------------------------------------------

|CharacterStyleDlg| のタブは段落スタイルのタブと似ている：

* |OrganizerTab| を使用して文字スタイルに名前を付け、必要な場合、階層を設定す
  る。
* |FontTab| を使用して、文字スタイルのフォント、スタイル、およびサイ
  ズを選択する。フォントサイズは、文字スタイルが適用される段落のフォントサイズの
  百分率またはポイントの増減として指定可能。また、文字スタイルが適用されるテキス
  トの言語を指定可能であり、異なる言語の単語を挿入して、正しい辞書を使用して綴字
  を検査することが可能。
* フォントの色、下線、浮き彫り、その他の効果などの属性を設定するには
  |FontEffectsTab| を使用する。例えば、非表示のテキストを頻繁に使用する場合、
  :guilabel:`Hi&dden` オプションがマークされた文字スタイルを定義すると便利だ。浮
  き彫り効果は drop caps や章番号や表題の他の部分をより強調するのに適しているこ
  とがある。
* テキストに色の付いた背景を適用するには :guilabel:`Highlighting` タブを使用す
  る。|StandardToolbar| :guilabel:`Highlight Color` ツールを使用するのと同じ効果
  が得られる。
* テキストに境界と影を適用するには |BordersTab| を使用する。
* 既定の添え字や上付き文字に満足できない場合は、|PositionTab| を使って下付き文字
  や上付き文字を作成する。同じタブで、回転、圧縮、拡大テキストを作成可能。

.. note::

   文字グループを回転させる場合、回転させたテキストを行内に収めるか、行の上下に
   展開させるかを指定する必要もある。この性質は文字スタイルに対してのみ有効だ。

Working with frame styles
======================================================================

枠はしばしばテキストや画像の入れ物として使われる。同じような目的で使われる枠の見
てくれに整合性を持たせるために、目的ごとに枠のスタイルを定義しておくとよい。

Writer には定義済みの枠スタイルがいくつか用意されており、必要に応じて変更したり、
枠スタイルを新しく定義したりすることが可能だ。枠スタイルの定義と適用方法は他のス
タイルと同様だ。

.. tip::

   ページレイアウトの目的によっては、枠と区画の使い方はかなり重複している。
   枠と区画の使い方については |Chapter06| を見ろ。

How frame styles work
----------------------------------------------------------------------

オブジェクトが Writer に追加されると、あらかじめ決められた型の枠で自動的に囲まれ
る。この枠によって、オブジェクトがページ上にどのように配置されるか、また文書内の
他の要素とどのように相互作用するかが設定される。枠を編集するには、使用する枠スタ
イルを変更するか、文書に枠が追加されたときに手動で上書きする。

枠とオブジェクトは一緒に使われるため、時には別々の要素であることを忘れがちだ。図
式のように、枠とオブジェクトを別々に編集できる場合もある。

.. note::

   スタイルを使用する他の要素とは異なり、枠は、その用途が多様であるため、そのス
   タイルによって部分的にしか定義できない。錨や保護要素など、枠の要素によっては
   個々の枠に対して手動で定義する必要がある。

   枠を手動で整形するには、メニューの :menuselection:`&Insert-->&Frame-->` を選
   択する。開いたダイアログボックスには、枠スタイルが設定されたときに利用できる
   すべての設定と、枠が挿入されたときにのみ利用できる設定が含まれている。詳しく
   は |Chapter06| を見ろ。

Planning the styles
----------------------------------------------------------------------

画像を混在させて使用する場合は、関連する二つのスタイルを定義するとよい。一つは背
景が白の画像スタイル用の境界付きスタイル、もう一つはそれ以外の背景用の境界なしス
タイルだ。また、テキストだけの枠を設計することもできる。

そうでなければ、既定の枠スタイルがほとんどの使用者の要望を網羅する。唯一必要と思
われるのは、テキスト枠用のスタイルだ。

Creating or modifying frame styles
----------------------------------------------------------------------

枠スタイルの設定にアクセスするには |StylesDeck| の枠スタイルを右クリッ
クし、コンテキストメニューから :menuselection:`&New...` または
:menuselection:`&Edit Style...` を選択する。

:guilabel:`Type` タブ
   枠の寸法と位置を設定する。ここで最も便利なオプションの一つは
   :guilabel:`A&utoSize` で、枠を含む物に自動的に合わせる。枠スタイルが自動的に
   使用される場合は、これをオンにする必要がある。
|OptionsTab|
   枠の内容を印刷するか、読み取り専用文書で編集可能にするか、装飾だけにするかを
   設定する。このタブではテキストの方向も設定する。右から左へのテキスト方向を使
   用する言語の中身に枠を使用する場合に便利だ。
|WrapTab|
   おそらく、枠にとって最も重要なタブだ。テキストを枠に対してどのように配置する
   か、テキストを枠にどの程度近づけるかを設定する。枠の内容を周りの段落から目立
   たせたい場合は、折り返しを:guilabel:`&Wrap Off` に設定する。
|AreaTab|
   背景色、ビットマップ、ハッチング、グラデーション、パターンを設定する。このタ
   ブは主に複雑なページレイアウトのテキスト枠で、テキスト枠がページの一般的な背
   景とは異なる体裁を持つ場合に便利だ。
|TransparencyTab|
   選択した背景の透明度を設定する。値の範囲は 0% から 100% だ。
|BordersTab|
   枠線の属性を設定する。
|ColumnsTab|
   このタブは枠をテキストに使用しない限り無視することが可能。オプションは
   |Chapter06| で説明するページスタイルの設定に使用するものと同じ。
:guilabel:`Macro` タブ
   使用者が枠を操作したときに動作を引き起こすために、枠で使用するマクロを設定す
   る。これらのオプションはオンラインライターや :abbr:`HTML (HyperText Markup
   Language)` 文書に便利だ。

Working with page styles
======================================================================

ページスタイルはページ特質（余白、ページサイズ、ヘッダー、フッターなど）を制御す
る。段落や文字、枠とは異なり、ページは性質を直接適用することはできない。ページの
性質を変更する場合、実際には基礎となるページスタイルを変更することになるので、そ
の変更はそのページスタイルを使用するページすべてに適用される。ページ個別の性質を
変更するには、ページスタイルを新規作成する必要がある。

Creating a new page style
----------------------------------------------------------------------

ページスタイルを作成する手順：

#. |StylesDeck| を開き
#. |PageStylesTab| をクリック
#. ウィンドウの任意の場所を右クリックし、:menuselection:`&New...` を選択

Organizer tab
----------------------------------------------------------------------

|OrganizerTab| については :ref:`writer09-anchorD` に記述がある。

General settings for the page style
----------------------------------------------------------------------

|PageStyleDlg| |PageTab| では、ページの一般的な設定を制御することができる。タブ
には三つの区画とプレビュー領域がある。

:menuselection:`Paper Format` 区画では用紙判を指定できる。定義済み書式の中から選
択するか、:guilabel:`User` を選択して :guilabel:`&Width` 欄と:guilabel:`&Height`
欄を使用して独自の用紙判を定義する。:guilabel:`&Portrait` または
:guilabel:`L&andscape` から用紙の向きを選択する。印刷機に盆が複数ある場合は、新
しいページスタイルでページを印刷する盆を指定できる。

:guilabel:`Margins` 区画で余白の大きさを単位で指定する。:guilabel:`Layout
Settings` 区画で :guilabel:`&Page layout` に :guilabel:`Mirrored` を選択した場
合、余白の名前が :guilabel:`&Left` と :guilabel:`&Right` から :guilabel:`I&nner`
と :guilabel:`O&uter` に変わる。

:guilabel:`&Gutter` 余白は、ページの左端（または内側）と左余白（または内側余白）
の間に残す余白で、製本を可能にする。あるいは、:guilabel:`G&utter` 設定をゼロのま
まにして、ガター余白量を左余白または内余白の値に追加することもでき
る。:guilabel:`Gutt&er position` 設定も見ろ。

:guilabel:`Layout Settings` 区画で、ドロップダウンリスト覧から希望のページレイア
ウトを選択する。定義するページスタイルが左右両方のページに適用されるか（既定）、
鏡映しにされたページに適用されるか、左右のページのみに適用されるかを決める。いく
つかの考慮事項がある：

* このスタイルで印刷したページを製本する場合は :guilabel:`Mirrored` レイアウトを
  選択しろ。
* ページレイアウトで一般的なのは、左右と上下の余白を非対称にすることである。

  * 外側の余白（右ページの右余白）は内側の余白（右ページの左余白）より広く、
  * 下側の余白は上側の余白より大きい。
* 新しい章の最初のページが常に右ページで始まるようにしたい場合は
  :guilabel:`Layout Settings` 区画で、最初の章ページのページスタイルが右ページだ
  けに設定されていることを確認しろ。章の残りの部分の典型的な手順は、左ページと右
  ページの両方に単一の鏡映しページスタイル（おそらく `Default Page Style` から）
  を定義することだ。鏡映しページは異なるヘッダーとフッターを持つことができる。こ
  のようにすると、すべての章がページスタイルを二つ使うことになる。
* 左ページと右ページに別々のページスタイルを定義することもできるが、それはページ
  の体裁を大きく変えたい場合だ（余白や段組が異なる場合など）。その場合、最初の
  ページスタイルの :guilabel:`Ne&xt Style` に左ページのみを設定し、その後に右
  ページのみを設定する。このようにすると、すべての章がページスタイルを三つ使うこ
  とになる。仮に、次のようなページスタイル名があるとする：

  * `First Page`
  * `Left Page`
  * `Right Page`

:guilabel:`Page &numbers` ドロップダウンリストを使用して、このページスタイルに適
用するページ番号スタイルを指定する。

.. _writer09-anchorB:

:guilabel:`Use page li&ne-spacing` は :ref:`前述 <writer09-anchorE>` されている
段落と段落スタイルの :guilabel:`Activate page li&ne-spacing` と組み合わせる。こ
れらのオプションの使用法の詳細については |Chapter06| を見ろ。

既定では、ページの背景（色や画像など）は余白を含むページ全体を塗りつぶす。背景を
余白領域ではなくテキスト領域だけで埋めたい場合は、ダイアログボックスの右下にある
:guilabel:`Background &covers margins` をオフにしろ。

Area and Border tabs
----------------------------------------------------------------------

|AreaTab| と |BordersTab| については |Chapter06| で詳しく説明している。背景（余
白を含むページ全体を覆う）を適用するには |AreaTab| を、ページのテキスト領域（余
白の内側）の周囲に枠線を引くには |BordersTab| を使用する。テキストエリアに影を付
けることもできる。

Header and Footer tabs
----------------------------------------------------------------------

各ページスタイルに異なるヘッダーやフッターを関連付けることができる。この性質を使
うと、左ページと右ページで異なるヘッダーをつけたり、新しい章の始まりのページで
ヘッダーをつけないようにしたり、といったことが簡単にできる。また、文書の最初の
ページに使用される同じページスタイルに、異なるヘッダーやフッターを持たせることも
できる。

|PageTab| で :guilabel:`Mirrored` または :guilabel:`Right and Left`
ページレイアウトを選択した場合、一つのスタイルを左右両方のページに使用しても、左
右のページで異なるヘッダーを指定できる。このオプションは、定義済みの
:guilabel:`Left Page` と :guilabel:`Right Page` のページスタイルや、左ページまた
は右ページのみに定義されたその他のページスタイルでは使用できない。

|HeaderTab| と |FooterTab| については |Chapter05| で詳しく説明している。

Columns tab
----------------------------------------------------------------------

|ColumnsTab| を使用して、ページスタイルの段レイアウトを作成する。

* :guilabel:`Settings`
* :guilabel:`Width and Spacing`
* :guilabel:`Separator Line`

の三つのセクションがある。希望の段数を選択する。複数段を選択すると二つの区画がア
クティブになる。定義済み設定（等間隔の列）を使用するか :guilabel:`Auto&Width` を
オフにして引数を手動で入力することができる。一ページに複数のカラムを使用する場合、
段間の区切り線の位置と寸法を微調整することもできる。

Footnote tab
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:guilabel:`Footnote` タブを使用して脚注の体裁を調整する。詳しくは |Chapter05| を
見ろ。

Working with list styles
======================================================================

一覧スタイルは段落スタイルと一緒に働く。一覧スタイルでは、字下げ、配置、一覧項目
に使用する番号や箇条書きの文字を定義する。単純な箇条書き一覧から複雑な複数階層
（入れ子）一覧まで、多くの一覧スタイルを定義できる。

他のスタイルと同様、一覧スタイルを使用する主な理由は整合性と作業の高速化だ。
|FormattingToolbar| :guilabel:`Toggle Ordered List` または :guilabel:`Toggle
Unordered List` 図像をクリックすると、単純な一覧をすばやく作成でき、
:guilabel:`Bullets and Numbering` ツールバーの図像を使用すると、非常に複雑な入れ
子一覧を作成できるが、作成された一覧の体裁は望むものではないかもしれない。

:menuselection:`F&ormat-->` メニューの :guilabel:`Bullets and Numbering` を使え
ば、一覧の一部または全部を手作業で整形できるが、後で体裁を変更する必要がある場合
は、手作業が多くなる。

一覧スタイルと段落スタイルがどのように連動するかについては |Chapter12| を見ろ。

Creating a new list style
----------------------------------------------------------------------

新しい一覧スタイルを作成するダイアログボックスには、:ref:`先述<writer09-anchorD>`
した通常の |OrganizerTab| に加え、六つのタブがある。

Unordered, Ordered, and Image tabs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:guilabel:`Unordered`, :guilabel:`Ordered`, :guilabel:`Image` の各タブには一覧項
目の記号（箇条書きや数字）の定義済み書式が含まれている。これらのいずれかをスタイ
ルに使用するには、画像をクリックする。太い枠線が選択されていることを示す。
:guilabel:`Bullets` タブの箇条書きはフォント文字で、|ImageTab| の箇条書きは画像
だ。

Outline tab
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

:guilabel:`Outline` タブを使用して、定義済み入れ子一覧から選択する。後述するよう
に、|PositionTab| と |CustomizeTab| を使用して一覧をカスタマイズし、一つを選択し
て独自のスタイルの出発点として使用することもできる。

Position tab
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

一覧項目の記号と一覧項目のテキストの字下げと間隔を微調整するには |PositionTab|
を使用する。このタブは |CustomizeTab| と組み合わせて使うと特に効果的だ。

以下の設定は、個々のレベルごとに調整することも、すべてのレベルを一度に調整するこ
ともできる（すべてのレベルを同じにする）。

.. |AlignedAt| replace:: :guilabel:`&Aligned at`

|AlignedAt|
   ページの左余白から測った番号記号の位置。
:guilabel:`N&umbering alignment`
   :guilabel:`Left` を選択すると番号記号が |AlignedAt| 位置から直接始まるように
   揃う。:guilabel:`Right` を選択すると記号は |AlignedAt| 位置の直前で終了するよ
   うに揃う。:guilabel:`Centered` を選択すると記号は |AlignedAt| 位置を中心に揃
   う。このオプションは段落の配置を設定せず、番号記号のみを設定する。
:guilabel:`&Numbering followed by`
   番号の後に続く文字：番号記号に続く文字（さらに |CustomizeTab| で選択した任意
   の文字（句読点など）を番号の後に表示する）。タブストップ、隙間、なしから選択
   する。
:guilabel:`&Tab stop at`
   上記でタブストップを選択した場合は、タブの位置を指定可能。
:guilabel:`&Indent at`
   左ページ余白から番号段落または箇条書き段落の最初の行に続く行すべての開始位置
   までの距離。

.. tip::

   :guilabel:`Numbering alignment` やその他の引数がどのように機能するかを十分に
   理解するには、十個以上の要素を持つ番号付き一覧を作成し、二桁以上の数字に十分
   な隙間が確保されていることを確認しろ。また、十以上の数字を右揃いにすることも
   できる。

Customize tab
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

アウトラインレベルのスタイルを定義するには |CustomizeTab| を使用する。このタブで
使用できるオプションは一覧で選択した印の型によって異なる。まず、左側で修正したい
:guilabel:`&Level` を選択する。十個のレベルを一度に修正するには、レベルとして
:guilabel:`1 - 10` を選択する。定義済みのアウトラインから開始した場合、いくつか
のレベルはすでに設定されている。

:guilabel:`&Number` 欄で選択した番号付けスタイル（箇条書き、図形、番号付け）に応
じて、以下の選択肢のいくつかがタブで利用できるようになる：

:guilabel:`&Start at`
   一覧の最初の値
:guilabel:`Character st&yle`
   数値や箇条書きに使用するスタイル
:guilabel:`Sho&w sublevels`
   番号付けスタイルに含める前のレベル。例えば ``2`` を入力し、前のレベルが ``A,
   B, C...`` の番号付けスタイルを使用する場合、現在のレベルの番号つけ方式は
   ``A.1`` になる。
:guilabel:`Separator`
   :guilabel:`&Before`
      番号の前に表示される任意のテキスト (e.g. ``Step``)
   :guilabel:`&After`
      番号の後に表示される任意のテキスト (e.g. ``.``)
:guilabel:`C&haracter` ボタン
   :guilabel:`Special Character` ダイアログボックスから一覧項目マーカーの文字を
   選択する
:guilabel:`&Graphics` ドロップダウンメニュー
   利用可能な画像の一覧を開くか、一覧マーカーとして使用するファイルを選択
:guilabel:`Wi&dth` と :guilabel:`He&ight`
   画像マーカーの寸法
:guilabel:`&Keep ratio`
   画像マーカーの幅と高さの比率を固定する
:guilabel:`Align&ment`
   画像物に対する配列調整

ダイアログボックスの右側には変更内容のプレビューが表示される。

:guilabel:`&Number` ドロップダウンリスト :guilabel:`Linked graphics` を選択した
場合、画像物は文書に埋め込まれるのではなくリンクされる。文書を別の計算機で開いた
場合（同じ画像ファイルが両方の計算機の同じパスにある場合などは期待できないとし
て）、または使用されている画像ファイルが計算機の別の場所に移動された場合、箇条書
きは表示されない。

既定値に戻すには、右下の :guilabel:`&Reset` ボタンを押せ。アウトラインレベルに関
係なく連続番号を使用したい場合は、タブ下部の :guilabel:`&Consecutive numbering`
をオンにする。

Solving formatting problems
======================================================================

Style Inspector と Style Spotlight という二つの機能は段落スタイルと文字スタイル
の使用および直接整形に関連する書式設定の問題の検出と修正を手助けする。これらの機
能により、LibreOffice と Microsoft Office の互換性が向上する。

Using the Style Inspector
----------------------------------------------------------------------

Style Inspector は Sidebar にある (:kbd:`Alt` + :kbd:`6`)。スタイル（段落および
文字）のすべての属性と、キャレットのある段落または単語に存在する直接書式が表示さ
れる。これらの詳細は、文書内の書式が正しくなかったり、一貫性がないように見える原
因を突き止める際に役立つ。

Style Inspector を使用してテキスト文書の書式問題を見つけろ。

* 直接整形によって上書きされたスタイル性質は :guilabel:`Paragraph Styles` 木およ
  び :guilabel:`Character Styles` 木で灰色表示され、そのスタイル性質がもはや有効
  でないことを示す。
* 子段落スタイルによって再定義された段落スタイル性質は灰色表示される。
* 子文字スタイルによって再定義された文字スタイル性質は灰色表示される。
* 文字スタイルと文字直接性質によって再定義された段落スタイルと直接性質は灰色表示
  される。

例えば、段落の余白が定規を使った直接書式設定によって変更された場合、段落スタイル
の余白性質は灰色にされ、Style Inspector の :guilabel:`Paragraph Direct
Formatting` 項目に余白性質が表示される。

別の例：`Emphasis` 文字スタイルが黄色の背景で単語を強調表示しているときに、使用
者が誤って白色の背景を使用して上書きした場合、黄色の属性は灰色され、Style
Inspector の :guilabel:`Direct Formatting` に白色が挙げられる。Style Inspector
には親スタイルから分岐した属性しか表示されない。

Style Inspector のいくつかの機能は、主に上級者にとって興味深いものだ：

* Style Inspector はテキストスパン、段落、しおりに関連するキャレット位置に、隠さ
  れた :abbr:`RDF (Resource Description Framework)` メタデータを表示できる。注釈
  付きテキストスパンの場合、Nested Text Content 項目で、入れ子になった注釈付きテ
  キスト範囲とメタデータ欄の境界を表示できる。
* カスタム色のメタデータ欄陰影は文書エディターでメタデータ品目を視覚化するため
  に、注釈付きテキスト範囲またはメタデータ欄に設定できる。これらの欄陰影を無効ま
  たは有効にするには、次のいずれかを行う：

  * メニューから |View-->FieldShadings| をオンオフ
  * キーバインド :kbd:`Ctrl` + :kbd:`F8`

詳しくは：

* <https://wiki.documentfoundation.org/ReleaseNotes/7.1#Style_inspector>
* <https://wiki.documentfoundation.org/ReleaseNotes/7.2#RDF_metadata_in_Style_Inspector>
* <https://wiki.documentfoundation.org/ReleaseNotes/7.2#Custom_color_metadata_field_shadings>

Using the Styles Spotlight
----------------------------------------------------------------------

Styles Spotlight は文書に存在するスタイルと手動書式を視覚的に表現する。段落と文字
に対してしか機能しない。

Spotlight を活動開始するには：

#. Sidebar |StylesDeck| に移動
#. |ParagraphStylesTab| または |CharacterStylesTab| 下部にある
   :guilabel:`Spotlight` をオンにする

スタイル名の横に色と番号の付いた欄が表示され、段落スタイルの標識が左余白に表示さ
れ、テキスト内の文字スタイルが番号付きで強調表示される。

手動で書式設定された段落は余白の色標識にハッチングパターンで表示される。
|OptionsDlg| :menuselection:`LibreOffice-->General` で :guilabel:`&Extended
tips` をオンにすると、ツールチップにスタイル名と、関連する場合は :guilabel:`+
Paragraph Direct Formatting` の文字が表示される。

----

.. rubric:: 章末注

.. [#writer09footnoteA] |OptionsDlg| |LanguagesPage|
.. [#writer09footnoteB] 段落の先頭に一つ以上の文字を大きめのフォントで描くこと
