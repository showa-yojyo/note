======================================================================
回転とズーム
======================================================================
クラス ``AppBase`` が制御するウィンドウ上でのマウスイベントに応じて、
シーンのズームや回転を動的に実現するためのクラス群の定義を行うモジュールを作る。
本稿では、そのモジュールの実装について記す。

クラス ``AppBase`` 階層側から受け取ったマウスの動きを捕捉して、
ズーム量や回転量を半ば無理矢理算出し、返送する。

.. contents::

方針
======================================================================
* マウスモーションによるビューの変換を実装する。
* マウスジェスチャーを 2 種類実装するという見方ができるので、一連のクラス階層を実装する。
  抽象基底クラスを ``AbstractViewNavigation`` とし、差し当たりその派生クラスをふたつ、
  ``ViewRotate`` と ``ViewZoom`` を定義する。

  * クラス ``AppBase`` にそれらのクラスのオブジェクトを保持させて、
    マウスイベントを delegate させる。

* モデルの回転に関して、次の点を考慮する。

  * とりあえず左クリックドラッグ時に動的にビューが回転するようにする。
  * マウスジェスチャーで回転を加算的に表現するのに便利な四元数オブジェクトを導入する。

* カメラのズームに関して、次の点を考慮する。

  * とりあえず右クリックドラッグ時に、動的にカメラのズームを機能させる。
  * 射影変換が透視変換なので、fovy の値を上下によりズーム率の変更とする。

クラス ``AbstractViewNavigation``
======================================================================
.. literalinclude:: /_sample/pyopengl/viewnavigation.py
   :language: python3
   :lines: 13-54

このクラスはマウスドラッグイベントを表現・記録する機能をサブクラスに提供するためだけにある。

* メンバーデータ ``self.app`` でデモクラスの参照を保持する。
* メンバーデータ ``self.width`` および ``self.height`` でドラッグ中のビューポートのサイズを保持する。
* メンバーデータ ``self.first_mouse_position`` に、
  ドラッグ開始地点のマウス位置を正規化座標系に変換して保持する。後述。
* 「マウスドラッグ中」イベントを処理するためのメソッド ``mouse`` および ``motion`` を提供する。
  後述するサブクラスはメソッド ``update_mouse_position`` を必ずオーバーライドし、
  そこで変換行列を決定する。

.. todo::

   クラス ``AppBase`` とのコラボレーションを図示したい。

クラス ``ViewRotate``
======================================================================
回転に関しては四元数を用いた計算をする。
感覚的には、回転以外の同次座標系表現によるアフィン変換のコードより一手間多く手順がかかっている気がする。

メソッド ``capture_mouse``
----------------------------------------------------------------------
.. literalinclude:: /_sample/pyopengl/viewnavigation.py
   :language: python3
   :lines: 66-70

マウスドラッグ開始時のマウスポインターのウィンドウ座標的なものを、
トラックボール（仮想半球）上の点の座標に読み替える。

メソッド ``update_mouse_position``
----------------------------------------------------------------------
.. literalinclude:: /_sample/pyopengl/viewnavigation.py
   :language: python3
   :lines: 72-90

* マウスの動きが微小なときには、メソッドが ``False`` を返してウィンドウの再描画をさせない。
* 直前のマウス位置、現在のマウス位置にそれぞれ対応する仮想半球上の変位の回転量を計算する。
  詳しくは後述する。

  * 自作関数 ``trackball_space`` の戻り値は 3 成分の
    ``np.array`` なので、4 成分になるよう拡大する。
  * それをそのまま ``Quat`` オブジェクト化する。

* ``self.quat`` を更新し、なおかつメソッド ``self.app.update_rotation`` に渡す。
  呼び出し先のメソッドでは、OpenGL のコンテキストバージョンに応じた方式で、現在の変換行列を更新する。

* ウィンドウの再描画をさせる。

クラス ``ViewZoom``
======================================================================

メソッド ``update_mouse_position``
----------------------------------------------------------------------
メソッド ``update_mouse_position`` だけを解説する。

.. literalinclude:: /_sample/pyopengl/viewnavigation.py
   :language: python3
   :lines: 100-107

* マウスがドラッグ開始地点から上方向に動いていればズームイン（拡大）、
  下方向ならばスームアウト（縮小）というふうに振る舞う。
* 個人的な好みにより、fovy 値を 25 度から 125 度に制限している。
* 更新後の ``fovy`` をメソッド ``self.app.update_projection`` に渡す。
  呼び出し先のメソッドでは、OpenGL のコンテキストバージョンに応じた方式で、現在の変換行列を更新する。
* 最後にシーンの再描画をさせる。

補助関数群を定義する
======================================================================
マウスカーソル位置のウィンドウ座標からある種の座標系に変換するための関数群を用意する。
マウス位置、およびその変位をウィンドウの形状に依らずに取り扱いたいので、
こういうものが要るのだ。

.. literalinclude:: /_sample/pyopengl/viewnavigation.py
   :language: python3
   :lines: 109-

関数 ``nds_coord``
----------------------------------------------------------------------
関数 ``nds_coord`` はスクリーン座標から正規化座標系 [-1, 1] x [-1, 1] への写像を求める。
ただし y 座標は上方向を正とする。
ウィンドウのサイズが 0 でない任意の大きさであっても、
変換後は座標成分の絶対値が 1 以下になる。

関数 ``trackball_space``
----------------------------------------------------------------------
関数 ``trackball_space`` はスクリーン座標から仮想的な半球上への写像を求める。
:doc:`/angel05/note4` 等を参考。

.. include:: /_include/python-refs-vision.txt
