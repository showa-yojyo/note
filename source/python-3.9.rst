======================================================================
What's New In Python 3.9 ノート
======================================================================

`What's New In Python 3.9 <https://docs.python.org/3/whatsnew/3.9.html>`__ をたどりながら調査。
興味のあるものしか読まない。

.. contents:: ノート目次

New Features
======================================================================

* クラス ``dict`` にマージ・更新操作用の演算子 ``|``, ``|=`` が追加

  * ``d1.update(d2)`` を ``d1 |= d2`` と書けるようになった。
  * あるいは ``{**d1, **d2}`` を ``d1 | d2`` と書けるようになった。

* 文字列系クラスに接頭辞・接尾辞を削除するためのメソッド
  ``.removeprefix()``, ``.removesuffix()`` が追加

  .. code:: pycon

     >>> '<td>19</td>'.removeprefix('<td>').removesuffix('</td>')
     '19'

* ``typing.List`` や ``typing.Dict`` などをアノテーションで使わなくても済む。

Other Language Changes
======================================================================

* ``__import__()`` は相対インポート絡みの例外発生時に ``ImportError`` を送出するようになった。
* スクリプトファイルを実行すると、コマンドライン引数で指定されたファイル名の絶対パスを覚えるようになった。
  ``__main__`` モジュールの ``__file__`` の値は相対パスではなく絶対パスとなる。
  スクリプト中で作業ディレクトリーが変化しても、これらのパスは有効であり続ける。

* ``"".replace("", s, n)`` の挙動が変わり、``s`` を返すようになった。

  * 「空文字列に含まれる空文字列を最大 ``n`` 個まで ``s`` に置換しろ」の意。

* 有効であるどんな式もデコレーターとして使えるようになった。以前は文法が相当限定的だった。
* モジュール ``typing`` のヘルプ周りを改善した。

  * IPython などで各要素を ``?`` で表示するときの文言が改善されたと読める。

* ``aclose()``, ``asend()``, ``athrow()`` を平行実行するのは禁止とする。
  そして ``ag_running`` は実際の非同期ジェネレーターの稼動状態を表すようになった。

  * これは何か例を見たい。

* 次におけるメソッド ``__iter__`` を呼び出す際の予期せぬエラーは
  ``TypeError`` でマスクされなくなった。

  * 演算子 ``in``
  * 関数 ``operator.contains()``
  * 関数 ``operator.indexOf()``
  * 関数 ``operator.countOf()``

New Modules
======================================================================

``zoneinfo``
----------------------------------------------------------------------

今は利用する機会がないので後回し。以下、動作確認したモジュール要素。

クラス ``zoneinfo.ZoneInfo()`` で適当にタイムゾーンを二つ作って時刻の変換処理。

.. code:: pycon

   >>> from datetime import datetime
   >>> import zoneinfo
   >>> tokyo = zoneinfo.ZoneInfo('Asia/Tokyo')
   >>> la = zoneinfo.ZoneInfo('America/Los_Angeles')
   >>> dt = datetime.today()
   >>> dt.astimezone(tokyo)
   datetime.datetime(2021, 2, 13, 23, 8, 5, 929591, tzinfo=zoneinfo.ZoneInfo(key='Asia/Tokyo'))
   >>> dt.astimezone(la)
   datetime.datetime(2021, 2, 13, 6, 8, 5, 929591, tzinfo=zoneinfo.ZoneInfo(key='America/Los_Angeles'))

関数 ``zoneinfo.available_timezones()`` は利用可能なタイムゾーンの文字列全てからなる集合を返す。
この関数は大量のファイルを開くので気をつけるようにと注意書きがある。

関数 ``zoneinfo.reset_tzpath()``: タイムゾーンを検索する際に用いられるファイルシステムパスを上書きする。
引数はパス文字列のリストなど。WSL だと ``/usr/share/zoneinfo`` などが利用できる。

変数 ``zoneinfo.TZPATH``: 文字列のリスト。読み取り専用。
タイムゾーンを検索する際に用いられるファイルシステムパス。

``graphlib``
----------------------------------------------------------------------

今のところ、トポロジカルソートのためのクラス ``TopologicalSorter`` がある。
NetworkX で学習したようなことができる。

.. code:: pycon

   >>> from graphlib import TopologicalSorter
   >>> graph = {
   ...     'プラチナキング': {'ドラゴスライム', 'エビルエスターク'},
   ...     'ドラゴスライム': {'スライム', 'リザードマン'},
   ...     'エビルエスターク': {'アンドレアル', 'デスマシーン'},
   ...     'アンドレアル': {'サンダーラット', 'ゲリュオン'},
   ...     'ゲリュオン': {'リザードマン', 'ダンビラムーチョ'},
   ...     'デスマシーン': {'ゴーレム', 'プロトキラー'},
   ...     'ゴーレム': {'ばくだん岩', 'バーサーカー'},
   ...     'プロトキラー': {'サンダーラット', 'ゴーレム'},}
   ...
   >>> ts = TopologicalSorter(graph)
   >>> tuple(ts.static_order())
   ('スライム',
    'リザードマン',
    'サンダーラット',
    'ダンビラムーチョ',
    'バーサーカー',
    'ばくだん岩',
    'ドラゴスライム',
    'ゲリュオン',
    'ゴーレム',
    'アンドレアル',
    'プロトキラー',
    'デスマシーン',
    'エビルエスターク',
    'プラチナキング')

Improved Modules
======================================================================

とても全部は見られないので、使ったことがあるモジュールに絞って記す。

``asyncio``
----------------------------------------------------------------------

``concurrent.futures``
----------------------------------------------------------------------

``datetime``
----------------------------------------------------------------------

``fcntl``
----------------------------------------------------------------------

``hashlib``
----------------------------------------------------------------------

``http``
----------------------------------------------------------------------

``importlib``
----------------------------------------------------------------------

``inspect``
----------------------------------------------------------------------

``ipaddress``
----------------------------------------------------------------------

``math``
----------------------------------------------------------------------

``multiprocessing``
----------------------------------------------------------------------

``os``
----------------------------------------------------------------------

``pathlib``
----------------------------------------------------------------------

``pdb``
----------------------------------------------------------------------

``pprint``
----------------------------------------------------------------------

``pydoc``
----------------------------------------------------------------------

``random``
----------------------------------------------------------------------

``signal``
----------------------------------------------------------------------

``socket``
----------------------------------------------------------------------

``sys``
----------------------------------------------------------------------

``time``
----------------------------------------------------------------------

``typing``
----------------------------------------------------------------------

``unicodedata``
----------------------------------------------------------------------

``xml``
----------------------------------------------------------------------

Deprecated
======================================================================

TBW

Removed
======================================================================

TBW
