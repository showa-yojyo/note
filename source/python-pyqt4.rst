======================================================================
PyQt4 利用ノート
======================================================================

.. contents:: ノート目次

.. note::

   * OS: Windows XP Home Edition SP 3
   * 本稿執筆にあたり利用した各パッケージのバージョンは次のとおり。

     * Python_: 2.6.6
     * PyQt_: GPL 4.8.4 for Python v 2.6 (x86)

関連リンクおよび参考サイト
======================================================================

PyQt_
  PyQt 紹介ページ。リリースニュース、ダウンロード、ドキュメントへの各リンクを提供している。

`PyQt Download`_
  自分の環境の Python のバージョンに合ったインストーラーを選択するべし。

`Qt Reference Documentation 4.7`_
  Qt 総本山のドキュメント。ここから調査スタートすればよかった。

`PyQt Wiki Tutorials`_
  チュートリアル文書へのリンクページ。
  全部はチェックしていない。

`The PyQt Tutorial`_
  GUI をコーディングで実装するタイプのチュートリアル。
  最終的にテトリス簡易版を実装する。
  テトリス実装例は PyQt 配布物の ``examples`` 内にもある。

インストール
======================================================================

インストール方法は、よくある Python パッケージとは異なる。
easy_install/pip を利用するわけではないし、
ソースコードの ``setup.py build``, ``setup.py install`` でもない。

`PyQt Download`_ のページで Windows 用のインストーラーをダウンロードし、
それを実行するだけで終了となる。

* インストールが無事に終了すると、
  Windows のスタートメニューから適当に辿っていくと
  ``PyQt GPL v4.8.4 for Python v2.6 (x86)`` のような項目ができているはずだ。

* まずは ``Examples`` > ``PyQt Examples and Demos`` を選択するとよい。
  PyQt で実装された様々なデモアプリのランチャーが出現する。
  画面左のリストから何か興味のあるものを選択して、
  画面下の ``Launch`` ボタンを押すと、デモが開始する。

ドキュメント
======================================================================
前述のスタートメニューの ``Documentation`` > ``Qt Documentation`` を選択すると、
オンラインヘルプがブラウザーで読める。

.. warning::

   ここから先は書きかけ。

PyQt を利用したプログラムを作成する
======================================================================
色々な流儀がありそうだが、GUI を Qt Designer で作成し、
ロジックを別の py ファイルに作り込む方法ではどうだろうか。

Qt Desinger
----------------------------------------------------------------------
TODO: Designer のチュートリアルを探す。

前述スタートメニューの ``Designer`` を選択する。

* 新規 widget を作成すると、真っ白なウィンドウを画面中央に出す。
  あとは一般的な RAD ツールのように、子 widget をゴテゴテ盛っていく。

  * 各 widget 要素の変数名等のプロパティを変更するには、
    画面右のオブジェクトインスペクタやプロパティエディタを利用する。

* 「フォーム＞プレビュー」のショートカットキーは ``Ctrl + R`` のようだ。

* 「フォーム＞コードを表示」メニュー項目は使いものにならない。
  手動で ``uic`` ファイルから ``py`` ファイルを生成するしかない。

  PyQt4 インストールフォルダーにある ``pyuic4.bat``
  をパスの通ったフォルダーにコピーして、コンソールから同バッチを実行する。
  コマンドライン引数は Designer で保存した ``uic`` ファイル一丁。

* 一番親の widget にレイアウトを設定するにはコツが要る。
  ある程度子 widget を親 widget に搭載したら、親で右クリックメニュー表示。
  「レイアウト」のサブメニューに色々あるので、所望の配置スタイルを選択する。

* Signal/Slot の編集はかなり直感的に設定できる。

  * ``F4`` キーで Signal/Slot 編集モードに移行。
    ``connect`` 関係を定義したい widget 間をドラッグアンドドロップ。
    ドロップ直後にわかりやすい入力フォームが現れるので、そこで指示。

  * なお ``F3`` キーで GUI 編集モードに移行。

``uic`` ファイルから生成した ``py`` ファイルの利用法
----------------------------------------------------------------------
この ``py`` ファイルをそのまま実行してもウィンドウが出てくるわけではない。
別のコードから ``import`` して利用するためのものらしい。

TODO: 例をここに書く。

.. _Python: http://www.python.org/
.. _PyQt: http://www.riverbankcomputing.co.uk/software/pyqt/intro
.. _`PyQt Download`: http://www.riverbankcomputing.co.uk/software/pyqt/download/
.. _`Qt Reference Documentation 4.7`: http://doc.qt.nokia.com/4.7/
.. _`PyQt Wiki Tutorials`: http://www.diotavelli.net/PyQtWiki/Tutorials
.. _`The PyQt Tutorial`: http://zetcode.com/tutorials/pyqt4/

