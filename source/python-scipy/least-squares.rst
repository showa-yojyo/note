======================================================================
最小二乗法
======================================================================
本稿では SciPy_ を用いて最小二乗法問題の扱いについて記す。
これも NumPy_ だけでなんとかなる問題だが、やってみよう。

.. contents::

関数 ``scipy.linalg.lstsq``
======================================================================
関数 ``scipy.linalg.lstsq`` を呼び出すことで、
測定データなり抽出データなりの最小二乗法による回帰曲線（直線）を求められる。
実用の都合上、測定値は二次元の平面に直線的に（一次関数の形で）
分布するという条件での方法を記す。

コード的な手順は次のとおりとなる。

#. 測定データを x, y 座標ごとに array_like オブジェクトの形で用意する。
   本説明ではそれぞれ ``xd``, ``yd`` とする。
#. 行列 A を次のように設定する。

   .. code-block:: python3
   
      A = [[xd[0], 1], [xd[1], 1], ..., [xd[-1], 1]]

#. ベクトル B を ``yd`` とする。
#. ``lstsq(A, B)`` を呼び出す。戻り値の tuple の最初の要素を ``X`` とする。
   これも tuple である。
#. ``X`` の最初の要素と次の要素が回帰直線の傾きと切片である。
   本説明ではそれぞれ ``a``, ``b`` とする。

コード例を示す。

.. literalinclude:: /_sample/scipy/least_squares.py
   :language: python3

私の環境での実行結果は次のとおり。

.. code-block:: text

   Line: y = 0.798x +138.253

回帰直線が得られたので、測定データと同時にグラフを描くとこのようになる。

.. figure:: /_static/scipy-least-squares.png
   :align: center
   :alt: 測定データと回帰直線
   :width: 815px
   :height: 615px
   :scale: 50%

.. include:: /_include/python-refs-core.txt
.. include:: /_include/python-refs-sci.txt
