======================================================================
Cygwin 利用ノート
======================================================================
本稿は自分専用の `Cygwin <http://www.cygwin.com/>`__ 手引書だ。
記憶喪失になったときのために。

.. note::

   * OS: Windows 10 Home (Version 1709)
   * Cygwin Net Release Setup Program: 2.891 (64 bit)

.. contents::

なぜ Cygwin なのか
======================================================================
TBW

事前条件
======================================================================
* インターネットに接続されているノート PC で作業を行なうものとする。
* Windows のユーザーアカウントに管理者権限が付与されているものとする。
* Cygwin のインストーラーは最新のものであるとする。

インストールとアップグレード
======================================================================
Cygwin 自体を新規にインストールする手順と、構成パッケージ各種を更新する手順の両方を説明する。
どちらも前述のインストーラーを利用する。

特に選択肢のないダイアログボックスについては :guilabel:`Next` ボタンを押して先に進めばいい。

アップグレード時に「新しいバージョンがある」という文言が現れたら、
Cygwin のサイトにアクセスして ``setup-x86_64.exe`` をダウンロードしてそれを用いる。

Choose Installation Type
----------------------------------------------------------------------
選択肢が三つあるが、いちばん上の

  :guilabel:`Install from Internet (downloaded files will be kept for future re-use)`

を選択して :guilabel:`Next` ボタンを押す。

昔はパッケージのダウンロードとインストールを二段階に分けて作業をしていたが、
最初のラベルの文言にあるように直接インストール時にもダウンロードしたファイルが保存されることがわかったので、
その必要はなくなった。

Choose Installation Directory
----------------------------------------------------------------------
ここでの項目は初回インストール時にのみ明示的に指定する。
二回目以降のインストーラー操作時には、これらの項目に設定済みの値が入力済みになっている。

Root Directory
  ドライブ直下に配置したいので、例えば ``D:\cygwin64`` のように指定する。

Install for
  たとえ自分一人しかユーザーがいなくても
  :guilabel:`All users (RECOMMENDED)` をチェックする。

Select Local Package Directory
----------------------------------------------------------------------
このダイアログボックスでは、インストーラーがインターネットからダウンロードした
ファイルを保存しておくためのフォルダーを指定する。

Local Package Directory
  これはインストーラー ``setup-x86_64.exe`` を保存してあるフォルダーに一致させておきたい。
  私の場合はこういう感じのパスだ：

    ``D:\tools\development\cygwin``

この後の処理では、サーバー名にちなんだフォルダーをここに作成し、
そのサーバーから得た多数のファイルをここに保存しておくことになる。

Select Connection Type
----------------------------------------------------------------------
インストーラーがインターネットにどのように接続するのかを指定するらしい。
私が不案内で詳細を語れない。

Select Your Internet Connection
  選択肢が三つあるが :guilabel:`Direct Connection` をチェックする。

Choose Download Site(s)
----------------------------------------------------------------------
ファイルをどのサーバーからダウンロードさせるのかを指定する。

Choose A Download Site
  リストから選択するしかない。
  作業場所に最も近いサーバーがわかれば、それを指定するのが自然だ。例えば

    ``ftp://ftp.jaist.ac.jp``

  などが良いだろう。

Select Pakages
----------------------------------------------------------------------
このダイアログボックスでは欲しいパッケージをまとめて選択する。

初回インストール時にはデフォルト設定のまま :guilabel:`Next` ボタンを押す。

二回目以降は

* 既にインストールしたパッケージの最新版へのアップグレードを確認したり、
* まだインストールしていないパッケージを追加したり、
* 要らなくなったパッケージを削除したりできる。

この画面は入力が思いの外難しい。

* ドロップダウンボックス :guilabel:`View` では :guilabel:`Up to Date` を主に使う。
  :guilabel:`Picked` を選ぶと、自分が明示的にインストールしたパッケージを一覧できる。

* エディットボックス :guilabel:`Search` はパッケージ名を入力することでインクリメンタルサーチする。
  利用してみることで、この手の UI でインクリメンタルサーチを提供してはいけないことが理解できる。

* ラジオボタン群は :guilabel:`Best` をチェックしておくのが自然だ。

日常作業や当プロジェクトを含む私個人のプロジェクトのあらゆる作業に役立つツールを提供する
パッケージ群を次に示す。クリーンインストールの際に参照したい：

* binutils: 実行形式解析用の :command:`objdump`, :command:`strings`, :command:`strip` がある。
* cygutils-extra: クリップボードを標準入出力とパイプする :command:`getclip`, :command:`putclip` がある。
  これがないとテキスト処理が満足にできないだろう。
* docbook-xml45: DocBook XML パッケージ。ドラクエ命のドキュメントをビルドするのに必要だ。
* docbook-xsl: DocBook XSL パッケージ。同上。
* dos2unix: テキストの改行文字を CRLF から LF にするためだけに :command:`dos2unix` が欲しい。
  実際には :command:`d2u` という短い名前が使える。
* libxslt: XML ファイルを別形式に変換するための :command:`xsltproc` がある。
  ドラクエ命のドキュメントをビルドするのに必要だ。
* make: 作業の自動化の柱である :command:`make` がある。
* optipng: PNG 画像ファイルサイズを最適化する :command:`optipng` がある。
  DropBox や GitHub のストレージ管理下の PNG ファイルにはこれを適用したい。
* patch: Cygwin は :command:`diff` を標準でインストールするが、なぜか :command:`patch` はオプショナルだ。
* rsync: ファイルのバックアップに :command:`rsync` を使う。
* shutdown: コンソールから Windows を休止状態にできるように :command:`shutdown` が欲しい。
  これにより :command:`hibernate` を実行すると Windows セッションが一気に休止状態になる。
* wget: ネットカフェ時代にたいへんお世話になった :command:`wget` がある。
  最近は決まったアドレスにあるファイルを一括でダウンロードする機会も激減したが、
  いざというときに使えるようにしておく。
* zip: パスワードをかけるだけの粗末な暗号化で済ませられるような
  ちょっとした非公開データを DropBox フォルダーにバックアップするスクリプトが
  :command:`zip` を使う。

逆に Cygwin インストーラーにあるパッケージを採用せず、
それぞれの公式サイトなどから入手するものを次に示す：

* ImageMagick
* gimp: 公式サイトから Windows 用 GIMP2 を入手してそれを採用する。
* git: :doc:`/git/index` 参照。
* graphviz
* inkscape: :doc:`/inkscape/index` 参照。
* python3: :doc:`/python-miniconda` 参照。
* subversion
* texlive

特に VCS などのコマンドラインツールの場合、実行ファイルのあるフォルダーのフルパスを
環境変数 :envvar:`PATH` の適当な位置に追加しておく。

環境構成
======================================================================
基本的にはインストール直後に一度だけ行えばよい作業を記す。

環境変数 :envvar:`HOME`
----------------------------------------------------------------------
Windows のユーザー環境変数として :envvar:`HOME` を定義する。
値は自分が実質的にホームとして使っているフォルダーのフルパスとする。
もっと言うとファイル ``.bash_profile`` へのシンボリックリンクが置いてあるフォルダーがよい。
そんなリンクを作った覚えがない場合は、そのものが置いてあるフィルダーでよい。

環境変数 :envvar:`PATH`
----------------------------------------------------------------------
Windows のそれをそのまま使うのではなく ``.bash_profile`` で完全に上書きするのがよい。

ファイル ``/etc/fstab``
----------------------------------------------------------------------
いわゆる cygdrive 対応をする。つまり
ファイル ``/etc/fstab`` の内容を次に示すようにするか、
あるいはファイル ``/etc/fstab.d/$USER`` を作成して次の内容にする：

.. code:: text

   none / cygdrive binary,posix=0,user,acl 0 0

これを設定することで、ドライブ直下に :command:`cd` する際には
例えば

.. code:: shell

   $ cd /cygdrive/d

ではなく

.. code:: shell

   $ cd /d

のようにできる。詳細は別途調査して欲しい。

インストールのテスト
======================================================================
自分の使うツールが全て正常にインストールされているのかをテストするための
スクリプトを作成するといいだろう。
各ツールごとにバージョン表記をして正常終了することを確認したり、
:command:`cygcheck` の出力結果を解析したりすることが考えられる。

関連ノート
======================================================================
* :doc:`/newham05/index`: ドットファイルの内容を検討するのに読み返したい。
