======================================================================
Python からはじめる数学入門 読書ノート
======================================================================

Python で数学を「やる」本。標準パッケージに加え、
Matplotlib_ と SymPy_ を使っていろいろやってみるという趣旨の本。

.. include:: /_include/book-details/saha16.txt

.. contents:: ノート目次

1 章 数を扱う
======================================================================
ウォーミングアップ。

* 分数と複素数は Python 標準で扱える。虚数単位は ``j`` または ``J`` とする。
* それらのオブジェクトを関数 ``input`` で生成することもできる。

2 章 データをグラフで可視化する
======================================================================
早くもプロットを扱う。

* クラス ``list`` および ``tuple`` の基本。
* Matplotlib を使ってプロットする。キャンバスの制御方法。
* ``pyplot`` の ``savefig`` で画像をファイルに保存できる。
* パラメーター表示される曲線のプロット（例：万有引力、投射軌跡）。
* 章末問題で棒グラフ（ヒストグラムではない）を紹介。

.. note:: 関連ノート

   * :doc:`python-matplotlib/index`

3 章 データを統計量で記述する
======================================================================
統計。

* 本章では母集団全体の統計量を考慮する。
* 算術平均、中央値、最頻値等、分散、標準偏差を自分で実装する。
  クラス ``collections.Counter`` の使い方がわかる。
* あとは Peason 相関、散布図の描き方、CSV ファイルの読み込み方など。

4 章 SymPy で代数と式を計算する
======================================================================
ここから SymPy を利用していく。

* ``Symbol`` オブジェクトによる数式表現。
* 数式の変形には ``factor`` や ``expand`` などを用いる。
* 数式を出力する際の関数 ``pprint`` の制御方法。
* 数式オブジェクトのメソッド ``subs`` によるシンボルへの値の代入。
* 文字列を SymPy の数式オブジェクトにするのには ``sympify`` を利用する。
* 方程式を ``solve`` で解く。けっこうな種類の方程式を解くことができる。
* SymPy はプロット機能も提供している。
* 章末問題で不等式や有理式を扱う。

.. note:: 関連ノート

   * :doc:`python-sympy/index`

5 章 集合と確率を操作する
======================================================================
集合と確率。

* 脚注を見ると訳者は確かな数学的知識の持ち主であることが窺える。
* クラス ``FiniteSet`` およびそのメソッドの紹介。
* 一様分布（自力）。
* 乱数。Python 標準の関数ももちろん利用できる。
* 章末問題にベン図 (matplotlib_venn) がある。あとは大数の法則を検証したり、
  シャッフルしたり、モンテカルロ法みたいなことをする。

6 章 幾何図形とフラクタルを描画する
======================================================================
Matplotlib のより高度な API を利用する。

* Patch と呼ばれる簡単な図形を描画する。
* Animation もサポート。一時変数が未使用に見えるかもしれないが、
  早過ぎるガベージコレクションを回避するために必要。
* `フラクタル <http://mathworld.wolfram.com/Fractal.html>`__、
  `ランダムウォーク <http://mathworld.wolfram.com/RandomWalk.html>`__、
  `シェルピンスキーギャスケット <http://mathworld.wolfram.com/SierpinskiCarpet.html>`__、
  `バーンズレイのシダ <http://mathworld.wolfram.com/BarnsleysFern.html>`__
  `エノン写像 <http://mathworld.wolfram.com/HenonMap.html>`__
* `マンデルブロ集合 <http://mathworld.wolfram.com/MandelbrotSet.html>`__ のために
  ``imshow`` を用いる。

7 章 初等解析問題を解く
======================================================================
極限、微分、積分、そしてなぜか確率密度関数を扱う。

* 標準の ``math`` パッケージが有用な関数を提供している。
* 極限は SymPy クラス ``Limit`` が使える。例題である種の複利計算の極限値を求める。
* 微分は SymPy クラス ``Derivative`` が使える。常微分も偏微分も同じインターフェイス。
* 極値の計算には :math:`f'(x) = 0` や :math:`f''(x) = 0` を ``solve`` することが重要だ。
* 勾配上昇法を自力で実装する。このアルゴリズムは初期値の選定がたいへん重要だ。
* 積分は SymPy クラス ``Integral`` が使える。原始関数と定積分の両方を求めるのに利用できる。
* 確率密度関数各種。いわゆるグラフの面積が確率の値を意味する。
* 章末問題に曲線の長さを求める主題のものがある。

付録 A ソフトウェアのインストール
======================================================================
Windows だけ読んだ。本書は Anaconda の使用を推奨している。
どうもこの記述の内容からすると、Matplotlib も SymPy も勝手にインストールされるようだ。

* ただし明示的にアップグレードする方法があるので、それを紹介している。
* 前述したベン図のパッケージは pip でインストール可能だ。訳者は失敗したらしいが。

あとがき
======================================================================
`Project Euler <https://projecteuler.net/>`__ について言及している。

訳者あとがき
======================================================================
Computer Based Math について述べられている。

.. include:: /_include/python-refs-core.txt
.. include:: /_include/python-refs-sci.txt
