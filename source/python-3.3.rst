======================================================================
What's New In Python 3.3 ノート
======================================================================
What's New In Python 3.3 を読んで、個人的に関心のある項目に注釈を付けていく。

.. contents:: ノート目次

組み込み機能
======================================================================
* ``bytes`` と ``bytearray`` のメソッドでバイト値を引数にするようなものについて、
  0 から 255 の整数を入力することが許されるようになった。

  ROM 解析コードを書くのに明らかに便利。

* ``list`` と ``bytearray`` に ``copy()``, ``clear()`` が追加。

  * ``copy()`` はいわゆる浅いコピーを実現する。
  * ``clear()`` が今までなかったのは驚き。

* ``OSError`` 例外階層が変更され、単純化された。

  * ``IOError`` や ``WindowsError`` が ``OSError`` に吸収されたと考えてよい。
  * 例えば ``FileExistsError`` や ``FileNotFoundError`` といったサブクラスが新規追加。
    これらにより ``IOError.errno`` を調べて処理を分岐するようなコードを書くのをやめられる。

* クラスと関数に ``__qualname__`` という属性が追加した。
  その要素を包含する名前空間のパスが見える。

* ``print()`` に ``flush`` キーワード引数が追加。想像通りの振る舞いをする。

文法仕様
======================================================================
* ``yield from`` 式の追加。要研究。
* ``raise X from none`` 式の追加。
  ``except`` 節で本来の例外を別のものに変換するときに、
  本来のエラーメッセージを潰すことができる。C++ の感覚だと不思議だ。
* Unicode リテラル値のためのプレフィックスが復活した。
* raw bytes リテラルとして br"..." だけでなく rb"..." とも書けるようになりました。

  rb しか使ったことがない。
  ちなみに生バイトリテラルはバイトデータの正規表現を指定するのに使える。

新規モジュール
======================================================================
* ``unittest.mock``

変更モジュール
======================================================================
* ``abc``

  * ``@abstractproperty``, ``@abstractclassmethod``, ``@abstractstaticmethod`` が軒並み非推奨。
    ``@abstractmethod`` に対応する組み込み関数を渡すように。

  * ``ABCMeta.register()`` が戻り値としてサブクラスを返すようになった。
    このことでクラスに対するデコレーターとしても使えるようになった。

* ``codecs`` に ``cp65001`` が Windows 専用コーデックとして追加。

* ``collections``

  * ``ChainMap`` が追加。
  * ``Counter`` に ``+=``, ``-=``, etc. が追加。

* ``io``: ``open()`` に排他フラグ ``x`` が追加。
  既存のファイルと同じ名前のものを開こうとすると例外 ``FileExistsError`` を送出する。

* ``itertools.accumulate()`` が二項関数を受け付けるようになった。
* ``math.log2()`` が追加。なんと ``math.log(x, 2)`` より正確であることが期待できる。
* ``mmap.read()`` を引数なしで呼び出し、バイト列を受け取ることができる。
* ``multiprocessing`` 周り。要研究。

* ``pdb`` タブ補完がより便利になった。コマンド名だけでなく、引数も補完する。
* ``sys.implementation`` 追加。
  ``sys.version_info`` をメンバーとして含む。

* ``time``

  * ``perf_counter()`` や ``process_time()`` などの関数が追加。
  * ``clock_`` 系関数追加。
  * ``sleep()`` に負の値を渡すと ``ValueError`` を送出するように変更。
  * ``clock()`` はプラットフォーム依存。
    これではなく ``perf_counter()`` や ``process_time()`` を使う。

* ``webbrowser`` が Google Chrome をサポート。
* ``xml.etree.ElementTree`` はこの名前で C 実装版が採用されるようになった。

その他
======================================================================
* Windows 版には py というスクリプトランチャーが配備されるようで、
  Python の複数のバージョンが環境にある場合の起動が柔軟にできるようだ。
