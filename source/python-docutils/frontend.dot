digraph G {
    graph [
        concentrate = true
        fontname = "Bitstream Vera Sans"
        fontsize = 9
        ranksep = 0.2
        splines = ortho
    ]
    node [
        fontname = "Bitstream Vera Sans"
        fontsize = 9
        shape = "record"
    ]
    edge [
        arrowtail = empty
        dir = back
        fontname = "Bitstream Vera Sans"
        fontsize = 9
    ]

    Values [
        label = "{Values
        |
        |+ update(dict, OptionParser)\l+ copy()\l}"
    ]
    Option [
        label = "{Option
        |# ATTRS : list\l
        |+ process(...)\l}"
    ]
    OptionParser [
        label = "{OptionParser
        |+ settings_spec : tuple\l+ settings_defaults : dict\l+ config_section :str\l...
        |+ get_standard_config_files()\l+ get_standard_config_settings()\l+ get_config_file_settings(file)\l...}"
    ]
    ConfigParser [
        label = "{ConfigParser
        |...
        |+ read(...)\l...}"
    ]

    // for indifferent nodes
    node [
        fillcolor = lightgrey
        style = filled
    ]

    PythonValues [
        label = "optparse.\nValues"
    ]
    PythonOption [
        label = "optparse.\nOption"
    ]
    PythonOptionParser [
        label = "optparse.\nOptionParser"
    ]
    SettingsSpec
    RawConfigParser [
        label = "configparser.\nRawConfigParser"
    ]

    // elbow nodes
    node [
        shape = circle
        label = ""
        height = 0
        width = 0
    ]

    { rank = same; a, b, c } // above OptionParser

    // inheritance hierarchy
    edge [
        arrowtail = empty
        dir = back
    ]

    PythonValues -> Values
    PythonOption -> Option
    //PythonOptionParser, SettingsSpec -> OptionParser
    PythonOptionParser -> a
    SettingsSpec -> c
    RawConfigParser -> ConfigParser

    // aggregation (shared association)
    edge [
        arrowtail = ediamond
    ]

    // composition (not shared association)
    edge [
        arrowtail = diamond
    ]

    // elbow edges
    edge [
        arrowhead = none
        arrowtail = none
        dir = none
    ]

    a -> b -> c [ minlen = 3 ]
    b -> OptionParser

    // association

    edge [
        dir = forward
        arrowhead = vee
    ]

    OptionParser -> Option [
        headlabel = "option_class "
        constraint = false
    ]
    OptionParser -> Values [
        headlabel = "&laquo; create &raquo;  "
        constraint = false
    ]
    OptionParser -> ConfigParser [
        headlabel = " &laquo; create &raquo;"
        constraint = false
    ]
}
