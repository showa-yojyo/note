======================================================================
環境設定
======================================================================
Matplotlib_ を利用するための環境をもっと細かく整備してみよう。

.. contents::

設定ファイル :file:`matplotlibrc` 概要
======================================================================
Matplotlib 環境のユーザー設定ファイルについて記す。

* Matplotlib が扱う、図の大きさや図形の色といった、ほとんど全てのプロパティーを指定するために
  設定ファイルというものを利用することができる。

* 設定ファイル名は ``matplotlibrc`` である。
* この設定ファイルによる設定のことを **rc settings** とか **rc parameters** とかと呼ぶ。
* その設定ファイルのあるディレクトリーは、次の優先度で決まる。

  #. 作業ディレクトリー。
  #. ユーザーの環境依存のディレクトリー。

     * Windows 環境でもユーザーがわざわざ環境変数 ``HOME`` を設定している場合は、
       Matplotlib はきちんとそのパスを参照してくれる。

     * 一度でも Matplotlib を利用すると、
       ``$HOME`` にフォルダー :file:`.matplotlib` ができている。
       そこにテキストファイル :file:`matplotlibrc` を自分で作成する。

  #. Matplotlib インストール場所から決まるディレクトリー。

     * 私の場合は :file:`D:/Python34/lib/site-packages/matplotlib/mpl-data/` となる。
     * Matplotlib のアップグレードの度に上書きされると思っていたほうがよい。
       したがって、この 設定ファイルを編集するような状況はまれだと思う。

* 実際に参照される設定ファイルは、関数 ``mpl.matplotlib_fname`` の呼び出しで確認可能。

* インストール場所から決まるディレクトリーに置いてある設定ファイルをコピー、編集して使う。

  テンプレは基本的に設定コマンド？のコメントアウトで埋め尽くされている。
  ここを眺めていればカスタマイズの方法は直感できる仕組みになっている。

* 設定ファイル :file:`matplotlibrc` をテキストエディターで編集するときには、
  もし python-mode 的な機能をサポートするエディターを使うのならば、それを ON にする。
  コードの見通しがよくなる（コメント文字列がコメント色になるだけだが）。

カスタマイズする
======================================================================
先述の方法でユーザー設定ファイルを生成し、
次のように編集して手持ちのプロットの表示がどのように変化するのかを検証した。

* PyQt5 をせっかくインストールしているので ``backend : Qt5Agg`` としてみる。
* ``plt.plot`` の線の色は ``axes.color_cycle`` で指定する。

  * カンマ区切りで数色を一度に指定する。
    プロットラインを追加するたびにカンマの次の色が適用されるのだろう。

    .. code-block:: text

       axes.color_cycle : deeppink, pink, b, g, r, c, m, y, k

* LaTeX 周りの設定は要研究。特にフォントの指定は大切そうだ。

.. include:: /_include/python-refs-sci.txt
